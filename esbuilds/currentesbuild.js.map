{
  "version": 3,
  "sources": ["global-externals:react-dom/client", "../src/original/features/counter/cdnCounterSlice.js", "../src/original/features/counter/Counter.jsx", "../src/original/features/application/cdnApplicationSlice.js", "../src/utlities/shuffle.js", "../src/original/features/spreadsheet/cdnCreateNewDraft.js", "../src/utlities/alphabet.js", "../src/original/features/spreadsheet/cdnSpreadsheetSlice.js", "../src/original/features/spreadsheet/cdnFormulaBlock.jsx", "../src/original/features/application/cdnLoginLogout.jsx", "../src/original/features/spreadsheet/cdnGreenHeader.jsx", "../src/original/features/spreadsheet/cdnCel.jsx", "../src/original/features/spreadsheet/cdnAlphabetRow.jsx", "../src/original/features/spreadsheet/cdnActiveCells.jsx", "../src/original/mediatemplates/cdnShowXlTableArrayOfArrays.jsx", "../src/original/features/posts/cdnPostsSlice.js", "../src/original/features/posts/cdnPostsButtonGroup.jsx", "../src/original/features/spreadsheet/cdnIconBar.jsx", "global-externals:react", "../src/original/hooks/useMedia.js", "../src/original/features/spreadsheet/cdnSpreadsheetLayout.jsx", "../src/utlities/extract.js", "../src/original/components/cdnQuizWithRandomNumber.jsx", "../src/original/components/cdnQuizCardWithStorage.jsx", "../src/original/state/cdnStore.js", "../src/esbuilds/currentesbuild.jsx"],
  "sourcesContent": ["export default ReactDOM;\nconst { createRoot, hydrateRoot } = ReactDOM;\nexport { createRoot, hydrateRoot };", "\r\nlet { createSlice } =RTK;\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount))\r\n  }, 1000)\r\n}\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value\r\n\r\nexport default counterSlice.reducer\r\n", "import {\r\n  decrement,\r\n  increment,\r\n  incrementByAmount,\r\n  incrementAsync,\r\n  selectCount,\r\n} from './cdnCounterSlice';\r\n\r\nlet { useSelector, useDispatch } = ReactRedux;\r\nlet { useState } = React;\r\nlet { Card } = ReactBootstrap;\r\n\r\nexport function Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n  return (\r\n    <Card style={{ width: '800px' }}>\r\n  <Card.Img variant=\"top\"\r\n   src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n  <Card.Body>\r\n    <Card.Title>Features Counter.jsx</Card.Title>\r\n   \r\n    <div className='container'>\r\n        <button\r\n        className='btn btn-sm btn-outline-secondary m-1'\r\n          \r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n        <span >{count}</span>\r\n        <button\r\n         className='btn btn-sm btn-outline-secondary m-1'\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className='container'>\r\n        <input\r\n       class=\"form-control\"\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={e => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n        className='btn btn-sm btn-outline-secondary m-1'\r\n          onClick={() =>\r\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\r\n          }\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className='btn btn-sm btn-outline-secondary m-1'\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n   \r\n  </Card.Body>\r\n</Card>\r\n\r\n   \r\n  );\r\n}\r\n", "//import { createSlice } from '@reduxjs/toolkit';\r\n\r\nlet { createSlice } = RTK;\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('econolabs');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n};\r\n\r\nexport const applicationSlice = createSlice({\r\n  name: 'application',\r\n  initialState: !!loadState() && !!loadState()?.application ? {\r\n     ...loadState().application, userEmail: loadState().application?.email.replace(/[^a-zA-Z0-9]/g, \"_\") } \r\n    : {\r\n    email: '',\r\n    user: '',\r\n    avatarUrl: '',\r\n    currentProjectTitle: '',\r\n    currentProjectComment: '',\r\n    currentProjectMediaAndDataAndTemplatesURL: '',\r\n    currentProjectSourseDataURL: '',\r\n    currentProjectMoneyScale: '',\r\n    currentProjectReportIndicatorsDictionary: ''\r\n  },\r\n  reducers: {\r\n    setUserProfile: (state, action) => {\r\n      state.email = action.payload.email;\r\n      state.user = action.payload.user;\r\n      state.avatarUrl = action.payload.avatarUrl;\r\n      state.userEmail = action.payload.email.replace(/[^a-zA-Z0-9]/g, \"_\")\r\n    },\r\n    set_user_profile: (state, action) => {\r\n      state.email = action.payload.email;\r\n      state.user = action.payload.user;\r\n      state.avatarUrl = action.payload.avatarUrl;\r\n      state.userEmail = action.payload.email.replace(/[^a-zA-Z0-9]/g, \"_\")\r\n    },\r\n    set_currentProject: (state, action) => {\r\n      state.currentProjectTitle = action.payload.currentProjectTitle;\r\n      state.currentProjectComment = action.payload.currentProjectComment;\r\n      state.currentProjectMediaAndDataAndTemplatesURL = action.payload.currentProjectMediaAndDataAndTemplatesURL;\r\n      state.currentProjectSourseDataURL = action.payload.currentProjectSourseDataURL;\r\n      state.currentProjectMoneyScale = action.payload.currentProjectMoneyScale;\r\n      state.currentProjectReportIndicatorsDictionary = action.payload.currentProjectReportIndicatorsDictionary\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUserProfile,  set_user_profile, set_currentProject } = applicationSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const selectApplication = state => state.application;\r\n\r\nexport default applicationSlice.reducer;", "function shuffle(array) {\r\n    return array.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  export default shuffle", "//import { Parser as FormulaParser } from \"hot-formula-parser\";\r\n//import { produce } from \"immer\"\r\n\r\nlet { produce } = basicfirebasecrudservices;\r\n\r\nfunction createNewDraft(data) {\r\n //   console.log(data);\r\n //    return calcData(data);\r\n     return calcDataWithImmer(data)\r\n}\r\n\r\nexport default createNewDraft;\r\n\r\nfunction calcDataWithImmer(data) {\r\n  //let newdata = JSON.parse(JSON.stringify(data));\r\n  //let formulas = [];\r\n\r\n  const newdata = produce(data, draft => {\r\n    let oneMoreLoop = true;\r\n    while (oneMoreLoop) {\r\n      oneMoreLoop = false;\r\n      for (let row = 0; row < draft.length; row++) {\r\n        for (let ix = 0; ix < draft[row].length; ix++) {\r\n          let cellValue = draft[row][ix];\r\n          //    console.log(cellValue);\r\n          if (\r\n            (typeof cellValue === \"string\" || cellValue instanceof String) &&\r\n            cellValue.toString().includes(\"=\")\r\n          ) {\r\n  \r\n            let mapObj = {\r\n               \u0421\u0422\u0415\u041F\u0415\u041D\u042C: \"POWER\",\r\n               \u0427\u041F\u0421: \"NPV\",\r\n               \u0412\u0421\u0414: \"IRR\",\r\n               \u041C\u0412\u0421\u0414: \"MIRR\",\r\n               \u0421\u0423\u041C\u041C: \"SUM\",\r\n               \u0421\u0420\u0417\u041D\u0410\u0427: \"AVERAGE\",\r\n               \u041E\u041A\u0420\u0423\u0413\u041B: \"ROUND\",\r\n               \u0421\u0422\u0410\u041D\u0414\u041E\u0422\u041A\u041B\u041E\u041D: \"STDEV\"\r\n              };\r\n            let re = new RegExp(Object.keys(mapObj).join(\"|\"), \"gi\");\r\n            cellValue = cellValue.replace(re, function (matched) {\r\n              return mapObj[matched];\r\n            });\r\n  \r\n            let result = calculateFormula(draft, cellValue.slice(1));\r\n            //       formulas.push({ formula: cellValue, result: result })\r\n            if (result.later) {\r\n              draft[row][ix] = cellValue;\r\n              oneMoreLoop = true;\r\n            } else {\r\n              draft[row][ix] = result.res.result;\r\n            }\r\n          } else draft[row][ix] = cellValue;\r\n        }\r\n      }\r\n    }\r\n//    draft[\"id1\"].done = true\r\n})\r\n  // console.log(newdata);\r\n  return newdata;\r\n}\r\n\r\n\r\n// function calcData(data) {\r\n//     let newdata = JSON.parse(JSON.stringify(data));\r\n//     //let formulas = [];\r\n  \r\n//     let oneMoreLoop = true;\r\n//     while (oneMoreLoop) {\r\n//       oneMoreLoop = false;\r\n//       for (let row = 0; row < newdata.length; row++) {\r\n//         for (let ix = 0; ix < newdata[row].length; ix++) {\r\n//           let cellValue = newdata[row][ix];\r\n//           //    console.log(cellValue);\r\n//           if (\r\n//             (typeof cellValue === \"string\" || cellValue instanceof String) &&\r\n//             cellValue.toString().includes(\"=\")\r\n//           ) {\r\n  \r\n//             let mapObj = {\r\n//                \u0421\u0422\u0415\u041F\u0415\u041D\u042C: \"POWER\",\r\n//                \u0427\u041F\u0421: \"NPV\",\r\n//                \u0412\u0421\u0414: \"IRR\",\r\n//                \u041C\u0412\u0421\u0414: \"MIRR\",\r\n//                \u0421\u0423\u041C\u041C: \"SUM\",\r\n//                \u0421\u0420\u0417\u041D\u0410\u0427: \"AVERAGE\",\r\n//                \u041E\u041A\u0420\u0423\u0413\u041B: \"ROUND\",\r\n//                \u0421\u0422\u0410\u041D\u0414\u041E\u0422\u041A\u041B\u041E\u041D: \"STDEV\"\r\n//               };\r\n//             let re = new RegExp(Object.keys(mapObj).join(\"|\"), \"gi\");\r\n//             cellValue = cellValue.replace(re, function (matched) {\r\n//               return mapObj[matched];\r\n//             });\r\n  \r\n//             let result = calculateFormula(newdata, cellValue.slice(1));\r\n//             //       formulas.push({ formula: cellValue, result: result })\r\n//             if (result.later) {\r\n//               newdata[row][ix] = cellValue;\r\n//               oneMoreLoop = true;\r\n//             } else {\r\n//               newdata[row][ix] = result.res.result;\r\n//             }\r\n//           } else newdata[row][ix] = cellValue;\r\n//         }\r\n//       }\r\n//     }\r\n//     // console.log(newdata);\r\n//     return newdata;\r\n//   }\r\n  \r\n  function calculateFormula(data, formula) {\r\n    let parser = new formulaParser.Parser();\r\n   // let parser = new FormulaParser.Parser();\r\n  \r\n    let dependencies = [];\r\n  \r\n//     console.log(data, formula);\r\n  \r\n    parser.on(\"callCellValue\", (cellCoord, done) => {\r\n      const x = cellCoord.column.index + 1;\r\n      const y = cellCoord.row.index + 1;\r\n  \r\n      dependencies.push({ x: x, y: y });\r\n  \r\n      // if (data[y - 1][x - 1].toString().slice(0, 1) === \"=\") {\r\n      //   return done(parseFloat(calculateFormula(data[y - 1][x - 1].toString().slice(1))));\r\n      // }\r\n  \r\n      if (!data[y - 1] || !data[y - 1][x - 1]) {\r\n        return done(\"\");\r\n      }\r\n      //  console.log(y - 1, x - 1);\r\n      done(data[y - 1][x - 1]);\r\n    });\r\n  \r\n    parser.on(\"callRangeValue\", (startCellCoord, endCellCoord, done) => {\r\n      var fragment = [];\r\n  \r\n      for (\r\n        var row = startCellCoord.row.index;\r\n        row <= endCellCoord.row.index;\r\n        row++\r\n      ) {\r\n        var rowData = data[row];\r\n        var colFragment = [];\r\n  \r\n        for (\r\n          var col = startCellCoord.column.index;\r\n          col <= endCellCoord.column.index;\r\n          col++\r\n        ) {\r\n          var value = rowData[col];\r\n  \r\n          dependencies.push({ x: col, y: row });\r\n  \r\n          colFragment.push(value);\r\n        }\r\n        fragment.push(colFragment);\r\n      }\r\n  \r\n      // console.log(fragment);\r\n  \r\n      if (fragment) {\r\n        done(fragment);\r\n      }\r\n    });\r\n  \r\n    let resultObj = parser.parse(formula);\r\n  \r\n    // console.log('formula: ' + formula);\r\n    let later = false;\r\n    let dependendentOn = [];\r\n    dependencies.forEach(item => {\r\n      let cellValue = null;\r\n      try {\r\n        cellValue = data[item.y - 1][item.x - 1];\r\n        //   console.log(cellValue);\r\n        dependendentOn.push(cellValue);\r\n      } catch {\r\n        //      console.log(formula);\r\n      }\r\n  \r\n      if (\r\n        (typeof cellValue === \"string\" || cellValue instanceof String) &&\r\n        cellValue.toString().includes(\"=\")\r\n      ) {\r\n        later = true;\r\n      }\r\n    });\r\n    // console.log('dependendentOn: ' + dependendentOn);\r\n    // console.log('---------');\r\n  \r\n    return {\r\n      res: resultObj,\r\n      dependencies: dependencies,\r\n      later: later,\r\n      dependendentOn: dependendentOn\r\n    };\r\n  }\r\n  \r\n  ", "const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\"\r\n];\r\n\r\nexport default alphabet", "\r\nimport createNewDraft from \"./cdnCreateNewDraft\";\r\nimport alphabet from \"../../../utlities/alphabet\";\r\n\r\nlet { createSlice } = RTK;\r\n\r\n\r\nexport function createProtoArray(protoDataObject={}, maxRow = 15, maxColumn = 6) {\r\n  Object.keys(protoDataObject).map((objKey) => {\r\n      const [col, ...row] = objKey;\r\n      let currentColIndex = alphabet.findIndex(item => item === col);\r\n      if (currentColIndex > maxColumn) { maxColumn = currentColIndex };\r\n      if (parseInt(row) > maxRow) { maxRow = parseInt(row) }\r\n  });\r\n//  console.log(maxColumn, maxRow);\r\n\r\n  var array = new Array(maxRow);\r\n  for (var i = 0; i < array.length; i++) {\r\n      array[i] = Array(maxColumn + 1).fill('');\r\n  }\r\n\r\n  Object.keys(protoDataObject).map((objKey) => {\r\n    const [col, ...row] = objKey;\r\n      let colArrayIndex = alphabet.findIndex((item) => item === col);\r\n      let rowArrayIndex = parseInt(row) - 1;\r\n      array[rowArrayIndex][colArrayIndex] = protoDataObject[objKey];\r\n  });\r\n  return array;\r\n}\r\n\r\nexport function createProtoObject(protoArray) {\r\n  let protoObject = {};\r\n  for (var i = 0; i < protoArray.length; i++) {\r\n    var row = protoArray[i];\r\n    for (var j = 0; j < row.length; j++) {\r\n      if (protoArray[i][j] !== \"\") {\r\n        protoObject[alphabet[j] + (i+1)] = protoArray[i][j];\r\n      }\r\n    }\r\n  }\r\n  return protoObject;\r\n}\r\n\r\nfunction insert(arr, index, newItem) {\r\n  return [\r\n    // part of the array before the specified index\r\n    ...arr.slice(0, index),\r\n    // inserted item\r\n    newItem,\r\n    // part of the array after the specified index\r\n    ...arr.slice(index),\r\n  ];\r\n}\r\n\r\nexport const spreadsheetSlice = createSlice({\r\n  name: \"spreadsheet\",\r\n  initialState: {\r\n    //    value: 0,\r\n    protoData: createProtoArray({}, 6, 6),\r\n    data: createNewDraft(createProtoArray({}, 6, 6)),\r\n    formulaValue: \"\", //createProtoArray(emptyProtoDataObject)[0][0],\r\n    formulaRowIndex: 0,\r\n    formulaColumnIndex: 0,\r\n    spreadsheetTitle: '',\r\n    expandView: true\r\n  },\r\n  reducers: {\r\n    // increment: (state) => {\r\n    //   // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n    //   // doesn't actually mutate the state because it uses the Immer library,\r\n    //   // which detects changes to a \"draft state\" and produces a brand new\r\n    //   // immutable state based off those changes\r\n    //   state.value += 1;\r\n    // },\r\n    // decrement: (state) => {\r\n    //   state.value -= 1;\r\n    // },\r\n    // incrementByAmount: (state, action) => {\r\n    //   state.value += action.payload;\r\n    // },\r\n    toggleExpandView: (state) => {\r\n       state.expandView = !state.expandView\r\n     },\r\n    add_row_under: (state) => {\r\n      let add_row_under_newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      let newRow = new Array(add_row_under_newProtoData[0].length).fill(\"\");\r\n      add_row_under_newProtoData = insert(\r\n        add_row_under_newProtoData,\r\n        state.formulaRowIndex + 1,\r\n        newRow\r\n      );\r\n      state.data = createNewDraft(add_row_under_newProtoData);\r\n      state.protoData = add_row_under_newProtoData;\r\n    },\r\n    add_row_before: (state) => {\r\n      let add_row_before_newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      let newProtoBeforeRow = new Array(\r\n        add_row_before_newProtoData[0].length\r\n      ).fill(\"\");\r\n      add_row_before_newProtoData = insert(\r\n        add_row_before_newProtoData,\r\n        state.formulaRowIndex,\r\n        newProtoBeforeRow\r\n      );\r\n      state.data = createNewDraft(add_row_before_newProtoData);\r\n      state.protoData = add_row_before_newProtoData;\r\n    },\r\n\r\n    delete_row: (state) =>{ \r\n      let delete_row__newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      delete_row__newProtoData = delete_row__newProtoData.filter(\r\n        (row, index) => index !== state.formulaRowIndex\r\n      );\r\n      state.data = createNewDraft(delete_row__newProtoData);\r\n      state.protoData = delete_row__newProtoData;\r\n    },\r\n\r\n    add_column_after: (state) => {\r\n      let add_column_after__newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      add_column_after__newProtoData = state.protoData.map((row) => {\r\n        return insert(row, state.formulaColumnIndex + 1, \"\");\r\n      });\r\n      state.data = createNewDraft(add_column_after__newProtoData);\r\n      state.protoData = add_column_after__newProtoData;\r\n    },\r\n\r\n    add_column_before: (state) => {\r\n      let add_column_before__newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      add_column_before__newProtoData = state.protoData.map((row) => {\r\n        return insert(row, state.formulaColumnIndex, \"\");\r\n      });\r\n      state.data = createNewDraft(add_column_before__newProtoData);\r\n      state.protoData = add_column_before__newProtoData;\r\n    },\r\n\r\n    delete_column: (state)=> {\r\n      let delete_column__newProtoData = JSON.parse(\r\n        JSON.stringify(state.protoData)\r\n      );\r\n      delete_column__newProtoData = state.protoData.map((row) => {\r\n        return row.filter(\r\n          (element, index) => index !== state.formulaColumnIndex\r\n        );\r\n      });\r\n      state.data = createNewDraft(delete_column__newProtoData);\r\n      state.protoData = delete_column__newProtoData;\r\n    },\r\n\r\n    update_formula: (state, action) => {\r\n      state.formulaValue = action.payload.value;\r\n      state.formulaRowIndex = action.payload.rowIndex;\r\n      state.formulaColumnIndex = action.payload.columnIndex;\r\n    },\r\n    update_data: (state, action) => {\r\n      let newProtoData = JSON.parse(JSON.stringify(state.protoData));\r\n      newProtoData[action.payload.rowIndex][action.payload.columnIndex] = action.payload.value;\r\n      state.data = createNewDraft(newProtoData);\r\n      state.protoData = newProtoData;\r\n    },\r\n    load_data: (state, action) => {\r\n      state.data = createNewDraft(action.payload.protoData);\r\n      state.protoData = action.payload.protoData;\r\n      state.expandView = true;\r\n    },\r\n    new_empty_spreadsheet: (state) => {\r\n      let protoArray = createProtoArray({}, 6, 6)\r\n      state.protoData = protoArray;\r\n      state.data = createNewDraft(protoArray);\r\n      state.formulaValue = protoArray[0][0];\r\n      state.expandView = true;\r\n    },\r\n    set_spreadsheetTitle: (state, action) => {\r\n      state.spreadsheetTitle = action.payload.spreadsheetTitle;\r\n    },\r\n\r\n    loadData: (state, action) => {\r\n      state.data = createNewDraft(action.payload.protoData);\r\n      state.protoData = action.payload.protoData;\r\n      state.expandView = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loadData,\r\n  // increment,\r\n  // decrement,\r\n  // incrementByAmount,\r\n  add_row_under,\r\n  add_row_before,\r\n\r\n  delete_row,\r\n  add_column_after,\r\n  add_column_before,\r\n  delete_column,\r\n\r\n\r\n  update_formula,\r\n  update_data,\r\n  load_data,\r\n  new_empty_spreadsheet,\r\n  set_spreadsheetTitle,\r\n\r\n  toggleExpandView\r\n} = spreadsheetSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n// export const incrementAsync = (amount) => (dispatch) => {\r\n//   setTimeout(() => {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }, 1000);\r\n// };\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n//export const selectSpreadsheetValue = (state) => state.spreadsheet.value;\r\n\r\nexport const selectSpreadsheetProtoData = (state) =>\r\n  state.spreadsheet.protoData;\r\nexport const selectSpreadsheetData = (state) => state.spreadsheet.data;\r\n\r\nexport const selectSpreadsheetFormulaValue = (state) =>\r\n  state.spreadsheet.formulaValue;\r\nexport const selectSpreadsheetFormulaRowIndex = (state) =>\r\n  state.spreadsheet.formulaRowIndex;\r\nexport const selectSpreadsheetFormulaColumnIndex = (state) =>\r\n  state.spreadsheet.formulaColumnIndex;\r\n\r\nexport const selectSpreadsheetTitle = (state) =>\r\n  state.spreadsheet.spreadsheetTitle;\r\n\r\n export const selectSpreadsheetExpand = (state) =>\r\n state.spreadsheet.expandView;\r\n\r\nexport default spreadsheetSlice.reducer;", "\r\nlet { useSelector, useDispatch } = ReactRedux;\r\nlet { useState } = React;\r\nlet { Button } = ReactBootstrap;\r\n\r\nimport {\r\n\r\n  selectSpreadsheetFormulaValue,\r\n  selectSpreadsheetFormulaRowIndex,\r\n  selectSpreadsheetFormulaColumnIndex,\r\n  update_data,\r\n\r\n} from \"./cdnSpreadsheetSlice\";\r\n\r\n\r\nfunction FormulaBlock() {\r\n  const formulaValue = useSelector(selectSpreadsheetFormulaValue);\r\n  const formulaRowIndex = useSelector(selectSpreadsheetFormulaRowIndex);\r\n  const formulaColumnIndex = useSelector(selectSpreadsheetFormulaColumnIndex);\r\n\r\n  const [formula, setFormula] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    setFormula(formulaValue);\r\n  }, [formulaValue]);\r\n\r\n  function onKeyPressOnInput(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleSubmit();\r\n    }\r\n  }\r\n\r\n  function handleSubmit() {\r\n    let valueChecked = isNaN(formula)\r\n      ? !!formula\r\n        ? formula.trim()\r\n        : \"\"\r\n      : +formula;\r\n\r\n    // let newProtoData = basicfirebasecrudservices.produce(\r\n    //   spreadsheetSelector.protoData, (draft) => {\r\n    //      draft[formulaRowIndex][formulaColumnIndex] = valueChecked;\r\n    //   })\r\n    // let newData = createNewDraft(newProtoData);\r\n    // spreadsheetDispatch({\r\n    //   type: \"SEED_STATE\",\r\n    //   payload: {\r\n    //     objects: {\r\n    //       protoData: newProtoData,\r\n    //       data: newData\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n    dispatch(\r\n      update_data({\r\n        rowIndex: formulaRowIndex,\r\n        columnIndex: formulaColumnIndex,\r\n        value: valueChecked,\r\n      })\r\n    );\r\n    //   setFormula(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"cell-content\">\r\n      <div>fx</div>\r\n      <Button\r\n        onClick={() => handleSubmit()}\r\n        variant=\"outline-secondary\"\r\n        size=\"sm\"\r\n      >\r\n        <span>&#10003;</span>\r\n      </Button>\r\n      {/* <button onClick={() => handleSubmit()}> <span >&#10003;</span></button> */}\r\n\r\n      <div>\r\n        <input\r\n          style={{\r\n            width: \"100%\",\r\n            border: \"none\",\r\n            outline: \"none\",\r\n            marginLeft: \"3px\",\r\n            fontSize: \"1.2rem\",\r\n          }}\r\n          value={formula === \"\" ? formulaValue : formula}\r\n          onChange={(e) => setFormula(e.target.value)}\r\n          onKeyPress={(e) => onKeyPressOnInput(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormulaBlock", "let { useSelector, useDispatch } = ReactRedux;\r\nlet { useState } = React;\r\nlet { Modal, Container, Row, Form, InputGroup, Button, Col, Image, FormControl } = ReactBootstrap;\r\n\r\nimport {\r\n    selectApplication, set_user_profile, setUserProfile\r\n} from \"./cdnApplicationSlice\";\r\n\r\n//import Unsplash, { toJson } from \"unsplash-js\";\r\n\r\n\r\n//https://unsplash.com/collections/aH98dheb50M/avatars\r\n\r\nfunction SearchPhotos(props) {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pics, setPics] = useState([]);\r\n\r\n    const unsplash = basicfirebasecrudservices.createApi({ accessKey: \"NhcRJz0lTzcxiZusH5ss4Up8-hBz5DTED3UE8rLCjbo\" });\r\n\r\n    // const unsplash = new Unsplash({ accessKey: \"NhcRJz0lTzcxiZusH5ss4Up8-hBz5DTED3UE8rLCjbo\" });\r\n\r\n    const searchPhotos = async () => {\r\n        //   e.preventDefault();\r\n        unsplash.collections.getPhotos({ collectionId: 'aH98dheb50M' })\r\n            // unsplash.search\r\n            //     .photos(query, randomInt(1, 20), 18)\r\n            //     .then(toJson)\r\n            // .then((json) => {\r\n            //     setPics(json.results);\r\n            // });\r\n            .then((res) => {\r\n                //  console.log(res)\r\n                setPics(res.response.results);\r\n            });\r\n    };\r\n\r\n    ;\r\n\r\n    return <>\r\n        <InputGroup className=\"mb-3\">\r\n\r\n            <InputGroup.Text id=\"query\">{pics.length > 0 ? '\u0429\u0435\u043B\u043A\u043D\u0438\u0442\u0435 \u043D\u0430 \u043A\u0430\u0440\u0442\u0438\u043D\u043A\u0435 \u0434\u043B\u044F \u0432\u044B\u0431\u043E\u0440\u0430' : ' '} \uD83D\uDCF7</InputGroup.Text>\r\n\r\n            <FormControl\r\n                aria-label=\"query\"\r\n                aria-describedby=\"query\"\r\n                type=\"text\"\r\n                //      name=\"query\"\r\n                placeholder={`Try \"face\", \"smile\" or \"happy face\"`}\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n            />\r\n\r\n            <Button variant=\"outline-secondary\" onClick={() => searchPhotos()} size=\"sm\">{pics.length > 0 ? '\u0418\u0441\u043A\u0430\u0442\u044C \u0441\u043D\u043E\u0432\u0430' : '\u0418\u0441\u043A\u0430\u0442\u044C \u0430\u0432\u0430\u0442\u0430\u0440'}</Button>\r\n\r\n        </InputGroup>\r\n\r\n\r\n        <Container>\r\n            <Row>\r\n                {pics.map((pic) =>\r\n                    <Col xs={6} md={2} key={pic.id}>\r\n                        <Image\r\n                            alt={pic.alt_description}\r\n                            src={pic.urls.thumb}\r\n                            thumbnail\r\n                            onClick={() => props.setUnsplashPic(pic.urls.thumb)} />\r\n                    </Col>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    </>\r\n}\r\n\r\nfunction UserFrofile(props) {\r\n    return <div>\r\n        <img\r\n            src={props.avatarUrl}\r\n            alt={props.user}\r\n            className=\"m-3\"\r\n            style={{\r\n                verticalAlign: \"middle\",\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n                borderRadius: \"50%\",\r\n                filter: \"grayscale(100%)\",\r\n                objectFit: \"cover\",\r\n            }}\r\n        />\r\n        <div>\r\n            <h5>{props.user}</h5>\r\n            <p>{props.email}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction LoginLogout({ screenSize = \"large\" }) {\r\n    const user_profile = useSelector(selectApplication);\r\n    const [unsplashPic, setUnsplashPic] = useState(null);\r\n    const dispatch = useDispatch();\r\n  //  const [modalShow, setModalShow] = useState(false);\r\n\r\n    // const applicationSelector = useContext(ApplicationContext);\r\n     const [show, setShow] = useState(false);\r\n\r\n    let user = user_profile.user?.user;\r\n    let email = user_profile.user?.email;\r\n\r\n\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(e.currentTarget.elements.formEmail.value);\r\n        console.log(e.currentTarget.elements.formUser.value);\r\n\r\n\r\n        dispatch(setUserProfile(\r\n            {\r\n                email: e.currentTarget.elements.formEmail.value,\r\n                user: e.currentTarget.elements.formUser.value,\r\n                avatarUrl: \"../freelancer.jpg\",\r\n            }));\r\n        setTimeout(function () { setShow(false) }, 1000);\r\n        setUnsplashPic(null)\r\n\r\n\r\n        // basicfirebasecrudservices.saveState({\r\n        //     application: {\r\n        //         email: e.currentTarget.elements.formEmail.value,\r\n        //         user: e.currentTarget.elements.formUser.value,\r\n        //         avatarUrl: \"../freelancer.jpg\",\r\n        //         userEmail: e.currentTarget.elements.formEmail.value.replace(\r\n        //             /[^a-zA-Z0-9]/g, \"_\")\r\n        //     }\r\n        // });\r\n\r\n\r\n        setTimeout(() => window.location.reload(), 3000)\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <span onClick={() => handleShow()} style={{ marginRight: \"1rem\" }}>\r\n                {!!user_profile?.user && user_profile.user.length > 0 ? user_profile.user : 'Anonymous'}\r\n            </span>\r\n{/* \r\n             <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch demo modal\r\n        </Button>  */}\r\n\r\n            <Modal\r\n                size=\"lg\"\r\n                aria-labelledby=\"login\"\r\n                show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    {!!unsplashPic || (user_profile?.avatarUrl && user_profile.avatarUrl.length > 10) ?\r\n                        <UserFrofile email={user_profile.email}\r\n                            user={user_profile.user}\r\n                            avatarUrl={!!unsplashPic ? unsplashPic : user_profile.avatarUrl} />\r\n                        : null}\r\n\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\"\r\n                                placeholder={email}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formUser\">\r\n                            <Form.Label>User</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                    <SearchPhotos setUnsplashPic={setUnsplashPic} />\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginLogout\r\n\r\n// function LoginLogout({ screenSize = \"large\" }) {\r\n//     const user_profile = useSelector(selectApplication);\r\n//     const [unsplashPic, setUnsplashPic] = useState(null);\r\n//     const dispatch = useDispatch();\r\n//     const [modalShow, setModalShow] = useState(false);\r\n\r\n//     function onSubmit(data) {\r\n//         //    console.log(data);\r\n//         dispatch(setUserProfile(\r\n//             {\r\n//                 email: data.email,\r\n//                 user: data.user,\r\n//                 avatarUrl: data.avatarUrl\r\n//             }));\r\n//         setTimeout(function () { setModalShow(false) }, 1000);\r\n//         setUnsplashPic(null)\r\n//     }\r\n\r\n//     return <>\r\n//         <span onClick={() => setModalShow(true)} style={{ marginRight: \"1rem\" }}>\r\n//             {!!user_profile?.user && user_profile.user.length > 0 ? user_profile.user : 'Anonymous'}\r\n//         </span>\r\n//         <Modal\r\n//             size=\"lg\"\r\n//             show={modalShow}\r\n//             onHide={() => setModalShow(false)}\r\n//             aria-labelledby=\"login\"\r\n//         >\r\n//             <Modal.Header closeButton>\r\n//                 {screenSize === \"large\" ? <Modal.Title id=\"login-lg\">\u041B\u043E\u0433\u0438\u043D</Modal.Title> : <small>\u041B\u043E\u0433\u0438\u043D</small>}\r\n\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 {!!unsplashPic || (user_profile?.avatarUrl && user_profile.avatarUrl.length > 10) ?\r\n//                     <UserFrofile email={user_profile.email}\r\n//                         user={user_profile.user}\r\n//                         avatarUrl={!!unsplashPic ? unsplashPic : user_profile.avatarUrl} />\r\n//                     : null}\r\n//                 <UserFormHook\r\n//                     email={user_profile.email}\r\n//                     user={user_profile.user}\r\n//                     avatarUrl={!!unsplashPic ? unsplashPic : user_profile.avatarUrl}\r\n//                     unsplashPic={unsplashPic}\r\n//                     onSubmit={onSubmit}\r\n//                     screenSize={screenSize}\r\n//                 />\r\n//                 <SearchPhotos setUnsplashPic={setUnsplashPic} />\r\n//             </Modal.Body>\r\n//         </Modal>\r\n//     </>\r\n// }\r\n\r\n// let modalForm = [\r\n//     { name: \"email\", title: \"Email\", type: \"email\" },\r\n//     { name: \"user\", title: \"\u0424\u0418\u041E \u0413\u0440\u0443\u043F\u043F\u0430\", type: \"text\" },\r\n//     { name: \"avatarUrl\", title: \"URL \u0430\u0432\u0430\u0442\u0430\u0440\", type: \"url\" }\r\n// ];\r\n\r\n// function UserFormHook(props) {\r\n//     const { register, handleSubmit, setValue } = useForm({ // reset, watch, errors\r\n//         defaultValues:\r\n//         {\r\n//             email: props.email,\r\n//             user: props.user,\r\n//             avatarUrl: props.avatarUrl\r\n//         }\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         setValue('avatarUrl', props.unsplashPic);\r\n//         // reset({\r\n//         //     email: props.email,\r\n//         //     user: props.user,\r\n//         //     avatarUrl: props.avatarUrl\r\n//         // });\r\n//     }, [props.unsplashPic]);\r\n\r\n//     return <form onSubmit={handleSubmit(props.onSubmit)}>\r\n//         {modalForm.map(item =>\r\n//             <InputGroup className=\"mb-3\" size=\"sm\" key={item.name}>\r\n\r\n//                 <InputGroup.Text style={{ width: '6rem' }}>\r\n//                     {props.screenSize === \"large\" ? item.title : <small>{item.title}</small>}\r\n//                 </InputGroup.Text>\r\n//                 <FormControl\r\n//                     key={item.name}\r\n//                     //           name={item.name}\r\n//                     type={item.type}\r\n//                     {...register(item.name)}\r\n//                 //    ref={register}\r\n//                 />\r\n//             </InputGroup>\r\n//         )}\r\n//         <Button variant=\"outline-secondary\" type=\"submit\" size=\"sm\">\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C</Button>\r\n//     </form>\r\n// }\r\n\r\n// function randomInt(min, max) {\r\n//     return min + Math.floor((max - min) * Math.random());\r\n// }\r\n\r\n", "let { useSelector } = ReactRedux;\r\n\r\nimport {\r\n  selectApplication\r\n} from '../application/cdnApplicationSlice';\r\n\r\nimport { selectSpreadsheetTitle } from \"./cdnSpreadsheetSlice\";\r\nimport LoginLogout from \"../application/cdnLoginLogout\";\r\n\r\nfunction GreenHeader() {\r\n    const title = useSelector(selectSpreadsheetTitle);\r\n    const userProfile = useSelector(selectApplication);\r\n\r\n    return <div\r\n        className=\"title\"\r\n        style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            padding: \".4rem\",\r\n        }}\r\n    >\r\n        {userProfile?.avatarUrl && userProfile.avatarUrl.length > 10 ? (\r\n            <img\r\n                src={userProfile.avatarUrl}\r\n                alt=\"\"\r\n                style={{\r\n                    verticalAlign: \"middle\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    borderRadius: \"50%\",\r\n                    filter: \"grayscale(100%)\",\r\n                    objectFit: \"cover\",\r\n                }}\r\n            />\r\n        ) : null}\r\n\r\n        {!!title ? (\r\n            <span style={{ marginLeft: \"1rem\" }}>{title}</span>\r\n        ) : (\r\n            <span>Calc</span>\r\n        )}\r\n    {/*    <div>LoginLogout</div> */}\r\n         <LoginLogout /> \r\n    </div>\r\n}\r\n\r\nexport default GreenHeader\r\n\r\n", "let { useDispatch, useSelector } = ReactRedux;\r\nlet { useState, useEffect } = React;\r\n\r\nimport {\r\n  selectSpreadsheetProtoData,\r\n  selectSpreadsheetData,\r\n  update_formula,\r\n  update_data,\r\n\r\n} from \"./cdnSpreadsheetSlice\";\r\n\r\n\r\n\r\n\r\nfunction Cell(props) {\r\n    const data = useSelector(selectSpreadsheetData)[props.rowIndex][\r\n      props.columnIndex\r\n    ];\r\n    const proDataValue = useSelector(selectSpreadsheetProtoData)[props.rowIndex][\r\n      props.columnIndex\r\n    ];\r\n  \r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState(data);\r\n  \r\n    useEffect(() => {\r\n      setValue(data);\r\n    }, [data]);\r\n  \r\n    function onKeyPressOnInput(e) {\r\n      if (e.key === \"Enter\") {\r\n        let valueChecked = isNaN(value) ? (!!value ? value : \"\") : +value;\r\n        dispatch(\r\n          update_data({\r\n            rowIndex: props.rowIndex,\r\n            columnIndex: props.columnIndex,\r\n            value: valueChecked,\r\n          })\r\n        );\r\n        dispatch(\r\n          update_formula({\r\n            rowIndex: props.rowIndex,\r\n            columnIndex: props.columnIndex,\r\n            value: !!value ? value : \"\",\r\n          })\r\n        );\r\n      }\r\n    }\r\n  \r\n    function clicked() {\r\n      dispatch(\r\n        update_formula({\r\n          rowIndex: props.rowIndex,\r\n          columnIndex: props.columnIndex,\r\n          value: proDataValue,\r\n        })\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className={props.active ? \"cells__input__active\" : \"cells__input\"}\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        onClick={() => clicked()}\r\n        onKeyPress={(e) => onKeyPressOnInput(e)}\r\n      />\r\n    );\r\n  }\r\n\r\n  export default Cell", "let { Fragment } = React;\r\n\r\nimport alphabet from \"../../../utlities/alphabet\";\r\n\r\nfunction AlphabetRow({x}) {\r\n    const alphabetRow = [];\r\n    for (let i = 0; i < x + 1; i += 1) {\r\n      alphabetRow.push(\r\n        <div key={alphabet[i]} className=\"cells__alphabet\">\r\n          {alphabet[i]}\r\n        </div>\r\n      );\r\n    }\r\n    return <Fragment>{alphabetRow}</Fragment>;\r\n  }\r\n\r\n  export default AlphabetRow;\r\n  ", "let { useSelector } = ReactRedux;\r\n//let { useState } = React;\r\n//let { Card, Pagination, Navbar, Form, InputGroup, Button, ButtonGroup } = ReactBootstrap;\r\n\r\nimport Cell from \"./cdnCel\";\r\nimport AlphabetRow from \"./cdnAlphabetRow\";\r\nimport NumbersColumns from \"./cdnAlphabetRow\";\r\n\r\nimport {\r\n  // selectSpreadsheetValue,\r\n  selectSpreadsheetData,\r\n  selectSpreadsheetFormulaRowIndex,\r\n  selectSpreadsheetFormulaColumnIndex,\r\n  selectSpreadsheetExpand\r\n\r\n} from \"./cdnSpreadsheetSlice\";\r\n\r\n\r\nfunction ActiveCells() {\r\n    const expandView = useSelector(selectSpreadsheetExpand);\r\n    const data = useSelector(selectSpreadsheetData);\r\n    //  selectSpreadsheetFormulaValue,\r\n    const formulaRowIndex = useSelector(selectSpreadsheetFormulaRowIndex);\r\n    const formulaColumnIndex = useSelector(selectSpreadsheetFormulaColumnIndex);\r\n\r\n    if (!expandView) return null;\r\n  \r\n    let numberOfX = data[0].length - 1;\r\n    let numberOfY = data.length;\r\n  \r\n    return <div\r\n      className=\"cells\"\r\n      style={{\r\n        gridTemplateColumns: `40px repeat(${numberOfX + 1\r\n          }, calc((100% - 50px) / ${numberOfX + 1}))`,\r\n        gridTemplateRows: `repeat(${numberOfY}, 25px)`,\r\n      }}\r\n    >\r\n      <div className=\"cells__spacer\"></div>\r\n      <AlphabetRow x={numberOfX} />\r\n      <NumbersColumns y={numberOfY} />\r\n      {data.map((row, rowIndex) => {\r\n        return row.map((_, columnIndex) => {\r\n          return (\r\n            <Cell\r\n              key={\"\" + rowIndex + \"_\" + columnIndex}\r\n              rowIndex={rowIndex}\r\n              columnIndex={columnIndex}\r\n              active={\r\n                formulaRowIndex === rowIndex &&\r\n                  formulaColumnIndex === columnIndex\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </div>\r\n  \r\n  }\r\n\r\n  export default  ActiveCells\r\n  ", "import alphabet from \"../../utlities/alphabet\";\r\n\r\nlet { Table } = ReactBootstrap;\r\n\r\nexport default function ShowXlTableArrayOfArrays({xlArray}) {\r\n    return <Table striped bordered hover>\r\n    <thead>\r\n      <tr>\r\n        <th> </th>\r\n        {xlArray[0].map((column, columnIndex) => (\r\n          <th key={columnIndex} className=\"text-center\">\r\n            {alphabet[columnIndex]}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {xlArray.map((row, rowIndex) => (\r\n        <tr key={rowIndex}>\r\n          <td>\r\n            {\" \"}\r\n            <small className=\"ml-1\">{rowIndex + 1}</small>\r\n          </td>\r\n          {row.map((column, columnIndex) => (\r\n            <td key={rowIndex + columnIndex}>\r\n              <small>{row[columnIndex]}</small>\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n   </Table>\r\n}\r\n\r\n\r\n ", "let { createSlice } =RTK;\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('econolabs');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n};\r\n\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState: {\r\n    posts: !!loadState() && !!loadState()?.posts?.posts ? loadState().posts.posts : [],\r\n    loading: false,\r\n    hasErrors: false,\r\n  },\r\n  reducers: {\r\n    createPost: (state, action) => {\r\n      state.posts.push(action.payload);\r\n      //       let newPosts = [...state.posts, action.payload ];\r\n      //       savePostsInBrowser(state.posts);\r\n    },\r\n    setPostsArrayItems: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n    change_post_content: (state, action) => {\r\n      let arrayId = state.posts.findIndex(item => item.id === action.payload.id);\r\n      state.posts[arrayId].content = action.payload.content;\r\n    },\r\n\r\n    mark_del_post: (state, action) => {\r\n      let arrayId = state.posts.findIndex(item => item.id === action.payload.id);\r\n      state.posts[arrayId].deleted = !state.posts[arrayId].deleted;\r\n    },\r\n    getPosts: state => {\r\n      state.loading = true\r\n    },\r\n    getPostsSuccess: (state, { payload }) => {\r\n      state.posts = payload\r\n      state.loading = false\r\n      state.hasErrors = false\r\n    },\r\n    savePostsSuccess: (state, { payload }) => {\r\n      //    state.posts = payload\r\n      state.loading = false\r\n      state.hasErrors = false\r\n    },\r\n    getPostsFailure: state => {\r\n      state.loading = false\r\n      state.hasErrors = true\r\n    },\r\n  },\r\n});\r\n\r\nexport const { createPost, change_post_content, mark_del_post,  getPosts, getPostsSuccess, getPostsFailure, savePostsSuccess, setPostsArrayItems } = postsSlice.actions;\r\n\r\nexport const selectPosts = state => state.posts;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n// export const incrementAsync = amount => dispatch => {\r\n//     setTimeout(() => {\r\n//       dispatch(incrementByAmount(amount));\r\n//     }, 1000);\r\n//   };\r\n\r\n\r\n\r\n// export function showPostsInBrowser() {\r\n//     return async dispatch => {\r\n//         dispatch(getPosts())\r\n//         try {\r\n//             const data = await posts.getItem('postsArray');\r\n\r\n//             // const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\r\n//             // const data = await response.json()\r\n\r\n//             console.log(data);\r\n//             dispatch(getPostsSuccess(!!data ? data : []))\r\n//         } catch (error) {\r\n//             dispatch(getPostsFailure())\r\n//         }\r\n//     }\r\n// }  \r\n\r\n// export function savePostsInBrowser(posts) {\r\n//     return async dispatch => {\r\n//    //     dispatch(getPosts())\r\n//         try {\r\n//             const data = await posts.setItem('postsArray', posts);\r\n//             // const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\r\n//             // const data = await response.json()\r\n//             console.log(data);\r\n//             dispatch(savePostsSuccess())\r\n//         } catch (error) {\r\n//             dispatch(getPostsFailure())\r\n//         }\r\n//     }\r\n// } \r\n\r\n\r\n\r\nexport default postsSlice.reducer;", "let { useDispatch, useSelector } = ReactRedux;\r\nlet { useState, useEffect } = React;\r\n\r\nlet { Card, Modal, Alert, FormControl, InputGroup, Button, ButtonGroup, Container, Row, Col, Form } = ReactBootstrap;\r\n\r\nimport ShowXlTableArrayOfArrays from \"../../mediatemplates/cdnShowXlTableArrayOfArrays\";\r\n\r\nimport { selectApplication } from \"../application/cdnApplicationSlice\";\r\nimport { createPost } from \"./cdnPostsSlice\";\r\n\r\nimport {\r\n  selectSpreadsheetProtoData,\r\n  load_data,\r\n  new_empty_spreadsheet,\r\n  set_spreadsheetTitle,\r\n  createProtoArray,\r\n  createProtoObject,\r\n  selectSpreadsheetExpand,\r\n  toggleExpandView\r\n} from \"../spreadsheet/cdnSpreadsheetSlice\";\r\n\r\n\r\nexport default function PostsButtonGroup(props) {\r\n  const dispatch = useDispatch();\r\n  const expandView = useSelector(selectSpreadsheetExpand);\r\n  const [showSave, setShowSave] = useState(false);\r\n  const [showOpen, setShowOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setShowSave(false);\r\n    setShowOpen(false);\r\n  };\r\n  const handleSaveShow = () => setShowSave(true);\r\n  const handleOpenShow = () => setShowOpen(true);\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup aria-label=\"Posts Buttons\" size=\"sm\">\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={() => dispatch(new_empty_spreadsheet())}\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u041D\u043E\u0432\u044B\u0439 \u0440\u0430\u0441\u0447\u0435\u0442\"\r\n        >\r\n          \u041D\u043E\u0432\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={() => handleSaveShow()}\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\"\r\n        >\r\n          \u0421\u043E\u0445\u0440\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={() => handleOpenShow()}\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\"\r\n        >\r\n          \u041E\u0442\u043A\u0440\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          onClick={() => dispatch(toggleExpandView())}\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title={props.expandView ? \"\u0421\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\" : \"\u0420\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\"}\r\n        >\r\n          {expandView ? \"\u0421\u0432\u0435\u0440\u043D\" : \"\u0420\u0430\u0437\u0432\"}\r\n        </Button>\r\n      </ButtonGroup>\r\n      {showSave ? (\r\n        <SavePostModal\r\n          show={showSave}\r\n          handleClose={handleClose}\r\n          quizString={props?.quizString}\r\n          title={props?.title}\r\n          answer={props?.answer}\r\n          theme={props?.theme}\r\n          answerIsRight={props?.answerIsRight}\r\n        />\r\n      ) : null}\r\n      {showOpen ? (\r\n        <SelectAndOpenModal show={showOpen} handleClose={handleClose} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SavePostModal(props) {\r\n  const dispatch = useDispatch();\r\n  const content = useSelector(selectSpreadsheetProtoData);\r\n  const email = useSelector(selectApplication).email;\r\n  const user = useSelector(selectApplication).user;\r\n  const avatarUrl = useSelector(selectApplication)?.avatarUrl;\r\n  const [savedSuccessfully, DoSavedSuccessfully] = useState(false);\r\n\r\n\r\n  const [formDataObject, setFormDataObject] = useState({\r\n    title: \"\",\r\n    comment: \"\",\r\n  });\r\n  const [editPostTitleComment, doEditPostTitleComment] = useState(true);\r\n\r\n  function setFormObject(objectWithNamesValues) {\r\n    doEditPostTitleComment(false);\r\n    setFormDataObject(objectWithNamesValues);\r\n  }\r\n\r\n  function savePost() {\r\n    if (email.length > 6) {\r\n      let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n      let idPost = basicfirebasecrudservices.getFirebaseNodeKey(\"/usersTemplates/posts/\");\r\n\r\n      let postObject = {\r\n        id: idPost,\r\n        title: formDataObject.title.length > 2 ? formDataObject.title : props?.title,\r\n        theme: \"\u041C\u043E\u0438 \u0448\u0430\u0431\u043B\u043E\u043D\u044B\",\r\n        answer: \"\",\r\n        comment: formDataObject.comment, //\u0422\u0435\u043C\u0430\r\n        type: \"spreadsheet\",\r\n        content: createProtoObject(content),\r\n        quizString: \"\", //!!props?.quizString ? props.quizString : \"\",\r\n        deleted: false,\r\n        email: email,\r\n        user: user,\r\n        avatarUrl: !!avatarUrl ? avatarUrl : null,\r\n        date: new Intl.DateTimeFormat(\"ru\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n        }).format(new Date()), //Date().toJSON()\r\n      };\r\n\r\n      dispatch(createPost(postObject));\r\n      var updates = {};\r\n      updates['/usersCraft/' + userEmail + '/posts/' + idPost] = postObject;\r\n      updates['/usersTemplates/posts/' + idPost] = postObject;\r\n      // updates['/currentDay/' + currentDay + '/posts/' + idPost] = currentDayObject;\r\n      // updates['/posts/' + user +  newPostKey] = postData;\r\n      // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\r\n      return basicfirebasecrudservices.updateFirebaseNode(updates)\r\n        .then(() => DoSavedSuccessfully(true));\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={props.show}\r\n      onHide={props.handleClose}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442 \u043A\u0430\u043A \u0428\u0430\u0431\u043B\u043E\u043D</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Alert variant=\"primary\">\r\n          <Alert.Heading>\u0421\u043A\u043E\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043E, \u0432\u0430\u043C \u043D\u0435 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F \u044D\u0442\u043E\u0439 \u0444\u0443\u043D\u043A\u0446\u0438\u0435\u0439</Alert.Heading>\r\n          <p className=\"mb-1\">\r\n            \u0420\u0430\u0441\u0447\u0435\u0442\u044B-\u0442\u0430\u0431\u043B\u0438\u0446\u044B \u043F\u043E \u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E \u0440\u0435\u0448\u0435\u043D\u043D\u044B\u043C \u0437\u0430\u0434\u0430\u0447\u0430\u043C \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u044E\u0442\u0441\u044F \u0432 \u0420\u0430\u0431\u043E\u0447\u0435\u0439 \u0442\u0435\u0442\u0440\u0430\u0434\u0438 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\r\n          </p>\r\n        </Alert>\r\n        {editPostTitleComment ? (\r\n\r\n          <PostFormHook title={!!props.title ? props.title : ''} setFormObject={setFormObject} />\r\n        ) : (\r\n          <Card>\r\n            <Card.Header>\u0428\u0430\u0431\u043B\u043E\u043D</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{formDataObject.title}</Card.Title>\r\n              <Card.Text>\r\n                {formDataObject.comment}\r\n              </Card.Text>\r\n              <ShowXlTableArrayOfArrays xlArray={createProtoArray(createProtoObject(content), 0, 0)} />\r\n              {savedSuccessfully ? \"\u0421\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u043E\" : <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={() => savePost()}>\r\n                \u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0448\u0430\u0431\u043B\u043E\u043D\r\n              </Button>}\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Modal.Body>\r\n      {/* <Modal.Footer></Modal.Footer> */}\r\n    </Modal>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction PostFormHook({setFormObject}) {\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(e.currentTarget.elements.formTitle.value);\r\n    console.log(e.currentTarget.elements.formComment.value);\r\n\r\n    setFormObject({\r\n      title: e.currentTarget.elements.formTitle.value,\r\n      comment: e.currentTarget.elements.formComment.value\r\n    })\r\n  };\r\n\r\n  return <Form onSubmit={handleSubmit}>\r\n\r\n    <InputGroup className=\"mb-3\" size=\"sm\" controlId=\"formTitle\">\r\n      <InputGroup.Prepend><InputGroup.Text style={{ width: '8rem' }}>\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435</InputGroup.Text></InputGroup.Prepend>\r\n      <FormControl\r\n        key={\"title\"}\r\n        type=\"text\"\r\n        as={\"input\"}\r\n        name={\"formTitle\"}\r\n      />\r\n    </InputGroup>\r\n\r\n    <InputGroup className=\"mb-3\" size=\"sm\" controlId=\"formComment\">\r\n      <InputGroup.Prepend><InputGroup.Text style={{ width: '8rem' }}>\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439</InputGroup.Text></InputGroup.Prepend>\r\n      <FormControl\r\n        key={\"comment\"}\r\n        type=\"textarea\"\r\n        as={\"textarea\"}\r\n        name={\"formComment\"}\r\n      />\r\n    </InputGroup>\r\n\r\n    <Button variant=\"outline-secondary\" type=\"submit\" size=\"sm\">\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C</Button>\r\n\r\n  </Form>\r\n\r\n\r\n}\r\n\r\n\r\nfunction SelectAndOpenModal(props) {\r\n  const email = useSelector(selectApplication).email;\r\n  let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n  // const [filter, setFilter] = useState(\"\");\r\n  const [selectedTheme, setSelectedTheme] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [userPosts, setUserPosts] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n    async function getPosts() {\r\n      let posts = await basicfirebasecrudservices.getFirebaseNode({\r\n        url: \"usersCraft/\" + userEmail + \"/posts/\",\r\n        type: \"array\"\r\n      });\r\n      return posts\r\n    }\r\n\r\n    getPosts().then(res => {\r\n      setUserPosts(res)\r\n    })\r\n  }, [])\r\n\r\n  function closeModalopenSpreadsheet(content, title) {\r\n    //  console.log(content)\r\n    dispatch(load_data({ protoData: content }));\r\n    dispatch(set_spreadsheetTitle({ spreadsheetTitle: title }));\r\n    setTimeout(props.handleClose(), 3000);\r\n  }\r\n\r\n\r\n  if (!userPosts) { return <div>...</div> }\r\n\r\n  let data = Object.keys(userPosts).map((item) => userPosts[item]).filter((quiz) => quiz.type === \"spreadsheet\").filter((post) => !post.deleted);\r\n\r\n  const uniqueThemes = !!data\r\n    ? [...new Set(data.map((item) => item.theme))]\r\n    : []; // [ 'A', 'B']\r\n\r\n  return <Modal size=\"lg\" show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      {!!uniqueThemes &&\r\n        uniqueThemes.map((theme) =>\r\n          <Button\r\n            key={theme}\r\n            variant=\"outline-secondary\"\r\n            onClick={() => setSelectedTheme(theme)}\r\n            // data-toggle=\"tooltip\"\r\n            // data-placement=\"bottom\"\r\n            // title=\"\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\"\r\n            className=\"m-1\"\r\n            size=\"sm\"\r\n          >\r\n            {theme}\r\n          </Button>\r\n        )}\r\n      <Container>\r\n        {data\r\n          .filter((quiz) => quiz.theme === selectedTheme)\r\n          .map((calc, index) =>\r\n            // {data.map(calc =>\r\n            <Row className=\"justify-content-md-center\" key={index}>\r\n              <Col md=\"auto\">\r\n                <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => closeModalopenSpreadsheet(createProtoArray(calc.content), calc.title)}>\r\n                  \u041E\u0442\u043A\u0440\r\n                </Button>\r\n              </Col>\r\n              <Col>{calc.title}</Col>\r\n              <Col>{calc.comment}</Col>\r\n            </Row>\r\n          )}\r\n      </Container>\r\n\r\n    </Modal.Body>\r\n    {/* <Modal.Footer>\r\n               <Button variant=\"outline-secondary\" onClick={() => props.handleClose()}>S</Button>\r\n        </Modal.Footer> */}\r\n  </Modal>\r\n}\r\n", "let { useDispatch, useSelector } = ReactRedux;\r\n//let { useState } = React;\r\nlet { ButtonGroup, Button } = ReactBootstrap;\r\n\r\nimport {\r\n  selectApplication\r\n} from '../application/cdnApplicationSlice';\r\n\r\nimport { toggleExpandView, selectSpreadsheetExpand } from \"./cdnSpreadsheetSlice\";\r\n\r\nimport PostsButtonGroup from \"../posts/cdnPostsButtonGroup\";\r\n\r\nfunction IconBar({quizString, title, answer, theme, answerIsRight}) {\r\n    const dispatch = useDispatch();\r\n    const expandView = useSelector(selectSpreadsheetExpand);   \r\n    const userProfile = useSelector(selectApplication);\r\n\r\n    return <div className=\"icon-bar\">\r\n      {!!userProfile?.email ?       \r\n        <PostsButtonGroup\r\n          expandView={expandView}\r\n          toggle_expand_view={toggleExpandView()}\r\n          quizString={quizString}\r\n          title={title}\r\n          answer={answer}\r\n          theme={theme}\r\n          answerIsRight={answerIsRight}\r\n        />\r\n       : (\r\n        <ButtonGroup aria-label=\"Posts Buttons\" size=\"sm\">\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            onClick={() => dispatch(new_empty_spreadsheet())}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"bottom\"\r\n            title=\"\u041D\u043E\u0432\u044B\u0439 \u0440\u0430\u0441\u0447\u0435\u0442\"\r\n          >\r\n            \u041D\u043E\u0432\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            onClick={() => toggleExpandView()}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"bottom\"\r\n            title={expandView ? \"\u0421\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\" : \"\u0420\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0440\u0430\u0441\u0447\u0435\u0442\"}\r\n          >\r\n            {expandView ? \"\u0421\u0432\u0435\u0440\u043D\" : \"\u0420\u0430\u0437\u0432\"}\r\n          </Button>\r\n        </ButtonGroup>\r\n      )}\r\n\r\n      <ButtonGroup aria-label=\"Rows Buttons\" size=\"sm\">\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443 \u043D\u0438\u0436\u0435\"\r\n          onClick={() => dispatch(add_row_under())}\r\n        >\r\n          +_\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443 \u0432\u044B\u0448\u0435\"\r\n          onClick={() => dispatch(add_row_before())}\r\n        >\r\n          +-\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u044D\u0442\u0443 \u0441\u0442\u0440\u043E\u043A\u0443\"\r\n          onClick={() => dispatch(delete_row())}\r\n        >\r\n          x-\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      <ButtonGroup aria-label=\"Columns Buttons\" size=\"sm\">\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043A\u043E\u043B\u043E\u043D\u043A\u0443 \u0441\u043F\u0440\u0430\u0432\u0430\"\r\n          onClick={() => dispatch(add_column_after())}\r\n        >\r\n          +|\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043A\u043E\u043B\u043E\u043D\u043A\u0443 \u0441\u043B\u0435\u0432\u0430\"\r\n          onClick={() => dispatch(add_column_before())}\r\n        >\r\n          |+\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u044D\u0442\u0443 \u043A\u043E\u043B\u043E\u043D\u043A\u0443\"\r\n          onClick={() => dispatch(delete_column())}\r\n        >\r\n          x|\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      {!!userProfile?.email ? (\r\n        <ButtonGroup aria-label=\"Workbook Buttons\" size=\"sm\">\r\n\r\n<Button\r\n          variant=\"outline-secondary\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"bottom\"\r\n          title=\"\u0420\u0430\u0431\u043E\u0447\u0430\u044F \u0442\u0435\u0442\u0440\u0430\u0434\u044C\"\r\n        >\r\n          <a href=\"../myworkbook\" target=\"_blank\">\r\n            \u0420\u0422\r\n          </a>\r\n        </Button>\r\n\r\n          {/* <Button\r\n            variant=\"outline-secondary\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"bottom\"\r\n            title=\"\u0421\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0440\u0430\u0431\u043E\u0447\u0443\u044E \u0442\u0435\u0442\u0440\u0430\u0434\u044C\"\r\n            onClick={() => navigate(\"/myworkbook/\")}\r\n          >\r\n            \u0420\u0422\r\n          </Button> \r\n          <SaveXLSButton />\r\n         <Button\r\n            variant=\"outline-secondary\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"bottom\"\r\n            title=\"\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0442\u0430\u0431\u043B\u0438\u0446\u0443 \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430 \u043E\u0431\u043C\u0435\u043D\u0430\"\r\n            onClick={() => {\r\n              //      dispatch(load_data({ protoData: sheetclip.parse('A/tB/tC/nD/t\"Some/nlong/ntext\"/tF/nG/tH/tI/n') }));\r\n              // console.log(clipboard);\r\n              // console.log(makeArray(clipboard));\r\n              // const IS_CLIPBOARD_API_ENABLED = (typeof navigator === 'object') && typeof navigator.clipboard === 'object' ? true : false;\r\n              // console.log(IS_CLIPBOARD_API_ENABLED);\r\n              // if (!!navigator.clipboard) {\r\n              //   // Clipboard API not available\r\n              //   console.log('Open')\r\n              // } else { console.log('Closed') }\r\n\r\n            }}\r\n          >\r\n            \u0427\u0411\r\n        </Button>\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"bottom\"\r\n            title=\"\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0442\u0430\u0431\u043B\u0438\u0446\u0443 \u0432 \u0431\u0443\u0444\u0435\u0440\u0430 \u043E\u0431\u043C\u0435\u043D\u0430\"\r\n            onClick={() => {\r\n              //setClipboard('A/tB/tC/nD/t\"Some/nlong/ntext\"/tF/nG/tH/tI/n'\r\n                //                 sheetclip.stringify(data)\r\n              //); //`Random number: ${Math.random()}`\r\n            }}\r\n          >\r\n            \u0421\u0411\r\n        </Button> */}\r\n        </ButtonGroup>\r\n      ) : null}\r\n    </div>\r\n}\r\n\r\nexport default IconBar", "export default React;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, act, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, startTransition, unstable_act, useCallback, useContext, useDebugValue, useDeferredValue, useEffect, useId, useImperativeHandle, useInsertionEffect, useLayoutEffect, useMemo, useReducer, useRef, useState, useSyncExternalStore, useTransition, version } = React;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, act, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, startTransition, unstable_act, useCallback, useContext, useDebugValue, useDeferredValue, useEffect, useId, useImperativeHandle, useInsertionEffect, useLayoutEffect, useMemo, useReducer, useRef, useState, useSyncExternalStore, useTransition, version };", "import { useState, useEffect } from 'react';\r\n\r\nexport default function useMedia(queries, values, defaultValue) {\r\n    // Array containing a media query list for each query\r\n\r\n    const isSSR = typeof window === \"undefined\";\r\n    const mediaQueryLists = isSSR ? [] : queries.map(q => window.matchMedia(q));\r\n  \r\n    // Function that gets value based on matching media query\r\n    const getValue = () => {\r\n      // Get index of first media query that matches\r\n      const index = mediaQueryLists.findIndex(mql => mql.matches);\r\n      // Return related value or defaultValue if none\r\n      return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\r\n    };\r\n  \r\n    // State and setter for matched value\r\n    const [value, setValue] = useState(getValue);\r\n  \r\n    useEffect(\r\n      () => {\r\n        // Event listener callback\r\n        // Note: By defining getValue outside of useEffect we ensure that it has ...\r\n        // ... current values of hook args (as this hook callback is created once on mount).\r\n        const handler = () => setValue(getValue);\r\n        // Set a listener for each media query with above handler as callback.\r\n        mediaQueryLists.forEach(mql => mql.addListener(handler));\r\n        // Remove listeners on cleanup\r\n        return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\r\n      },\r\n      [] // Empty array ensures effect is only run on mount and unmount\r\n    );\r\n  \r\n    return value;\r\n  }", "//import React from \"react\";\r\n//import { useSelector, useDispatch } from \"react-redux\";\r\n//import useClippy from 'use-clippy';\r\n//import SheetClip from 'sheetclip';\r\n\r\n//import CompactSpreadsheetLayout from \"./CompactSpreadsheetLayout\";\r\nimport FormulaBlock from \"./cdnFormulaBlock\";\r\n//import Cell from \"./Cell\";\r\n//import wCompactSpreadsheetLayout from \"./NewCompactSpreadsheetLayout\";\r\n\r\n//import { arrayToExcel } from \"../../hooks/ArrayToExcel\";\r\n\r\nimport GreenHeader from \"./cdnGreenHeader\";\r\nimport ActiveCells from \"./cdnActiveCells\";\r\nimport IconBar from \"./cdnIconBar\";\r\n\r\nimport useMedia from \"../../hooks/useMedia\";\r\n\r\n//function makeArray(string) { return string.split(\"/n\").map((line) => line.split(\"/t\")); }\r\n\r\nexport default function SpreadsheetLayout(props) {\r\n\r\n  const screenSize = useMedia(\r\n    // Media queries\r\n    [\"(min-width: 810px)\", \"(min-width: 400px)\", \"(min-width: 100px)\"],\r\n    // Column counts (relates to above media queries by array index)\r\n    [\"large\", \"medium\", \"small\"],\r\n    // Default column count\r\n    \"large\"\r\n  );\r\n\r\n  // if (screenSize === \"small\") {\r\n  //   return <CompactSpreadsheetLayout screenSize={screenSize} />\r\n  //   //    return <SmallScreenCalculations />;\r\n  // }\r\n\r\n  // if (screenSize === 'medium') { return <MediumCalculations /> }\r\n\r\n  // if (screenSize === \"medium\") {\r\n  //   // if (data.length > 3) {\r\n  //   //   dispatch(\r\n  //   //     load_data({\r\n  //   //       protoData: [[\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"], [\"\"]],\r\n  //   //     })\r\n  //   //   );\r\n  //   // }\r\n\r\n  //   return <CompactSpreadsheetLayout screenSize={screenSize} />\r\n\r\n  //   //    return <CompactSpreadsheetLayout />;\r\n  // }\r\n\r\n\r\n  return (\r\n    <div className=\"excelstyle\">\r\n      <GreenHeader />\r\n      <IconBar {...props} />\r\n      <FormulaBlock />\r\n      <ActiveCells />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n", "// const searchRegExp = /{var1-10}/g;\r\n//   const replaceWith = randomNumber.toString();\r\n//   quizString = quizString.replace(searchRegExp, replaceWith);\r\n//   answer = answer.replace(searchRegExp, replaceWith);\r\n//   answer = Math.round(parser.parse(answer).result * 10000) / 10000;\r\n//   let stringExtractor = extract([\"{=\", \"}\"]);\r\n//   let stuffIneed = stringExtractor(quizString);\r\n//   for (let i = 0; i < stuffIneed.length; i++) {\r\n//       let feedback = Math.round(parser.parse(stuffIneed[i]).result * 10000) / 10000;\r\n//       quizString = quizString.replace(\"{=\" + stuffIneed[i] + \"}\", feedback);\r\n//   }\r\n\r\n\r\n\r\nfunction extract([beg, end]) {\r\n    const matcher = new RegExp(`${beg}(.*?)${end}`, \"gm\");\r\n    const normalise = (str) => str.slice(beg.length, end.length * -1);\r\n    return function (str) {\r\n      return str.match(matcher).map(normalise);\r\n    };\r\n  }\r\n\r\n  \r\n  export default extract", "\r\nlet { useSelector } = ReactRedux;\r\nlet { useState } = React;\r\nlet { Card, InputGroup, Button, FormControl } = ReactBootstrap;\r\n\r\n//import { createPost } from \"../features/posts/postsSlice.js\";\r\n\r\nimport {\r\n  selectSpreadsheetProtoData,\r\n  createProtoObject\r\n} from \"../features/spreadsheet/cdnSpreadsheetSlice.js\";\r\n\r\n//import { selectApplication } from \"../features/application/cdnApplicationSlice.js\";\r\nimport SpreadsheetLayout from \"../features/spreadsheet/cdnSpreadsheetLayout.jsx\";\r\n\r\nimport extract from \"../../utlities/extract.js\";\r\n\r\nfunction QuizWithRandomNumber(\r\n  {email, user, avatarUrl, header=\"h\", randomNumber = 5, answer: quizanswer, media=null,\r\n  title, imageurl = null, setId = null, text = null, hint = \"\", theme=\"\"}\r\n) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [showAnswer, setShowAnswer] = useState(null);\r\n  const [answerIsRight, setAnswerIsRight] = useState(null);\r\n\r\n  //  const dispatch = useDispatch();\r\n  const content = useSelector(selectSpreadsheetProtoData);\r\n\r\n//  let { email, user, avatarUrl } = useSelector(selectApplication);\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  let parser = new formulaParser.Parser();\r\n  //let parser = new FormulaParser();\r\n\r\n\r\n\r\n  let quizString = text;\r\n  //let quizString = `this {={var1-10}+1} some {=2+{var1-10}} that can be {=3+{var1-10}} with a {=4+{var1-10}} function`;\r\n  const searchRegExp = /{var1-10}/g;\r\n  const replaceWith = randomNumber.toString();\r\n  quizString = quizString.replace(searchRegExp, replaceWith);\r\n\r\n  let answer = quizanswer.replace(searchRegExp, replaceWith);\r\n  answer = Math.round(parser.parse(answer).result * 1000) / 1000;\r\n\r\n  let stringExtractor = extract([\"{=\", \"}\"]);\r\n  let stuffIneed = stringExtractor(quizString);\r\n  //console.log(stuffIneed);\r\n  // Outputs: [ 'is', 'text', 'extracted', 'reusable' ]\r\n\r\n  for (let i = 0; i < stuffIneed.length; i++) {\r\n    let feedback = Math.round(parser.parse(stuffIneed[i]).result * 1000) / 1000;\r\n    // console.log(answer);\r\n    quizString = quizString.replace(\"{=\" + stuffIneed[i] + \"}\", feedback);\r\n  }\r\n\r\n  function handleCheckAnswer() {\r\n    setShowAnswer(true);\r\n    if (\r\n      parseFloat(value) / parseFloat(answer) < 1.02 &&\r\n      parseFloat(value) / parseFloat(answer) > 0.98\r\n    ) {\r\n      setAnswerIsRight(true);\r\n      if (email.length > 6) {\r\n        let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n        let idPost = basicfirebasecrudservices.getFirebaseNodeKey(\"usersCraft/\" + userEmail + \"/posts\");\r\n        // firebase.database().ref(userEmail).child(\"posts\").push().key;\r\n        let currentDay = new Intl.DateTimeFormat(\"en\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })\r\n          .format(new Date())\r\n          .replace(/[^a-zA-Z0-9]/g, \"_\");\r\n\r\n        let postObject = {\r\n          id: idPost, //Math.floor(Math.random() * 1001),\r\n          title: title,\r\n          theme: theme,\r\n          answer: answer,\r\n          comment: title + \" (\" + theme + \")\", //\u0422\u0435\u043C\u0430\r\n          type: \"spreadsheet\",\r\n          content: createProtoObject(content),\r\n          quizString: quizString,\r\n          deleted: false,\r\n          email: email,\r\n          user: user,\r\n          avatarUrl: !!avatarUrl ? avatarUrl : null,\r\n          date: new Intl.DateTimeFormat(\"ru\", {\r\n            weekday: \"short\",\r\n            year: \"numeric\",\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n          }).format(new Date()), //Date().toJSON()\r\n        };\r\n\r\n        let currentDayObject = {\r\n          id: idPost,\r\n          title: title,\r\n          theme: theme,\r\n          email: email,\r\n          user: user,\r\n          avatarUrl: !!avatarUrl ? avatarUrl : null,\r\n          timestamp: +Date.now(),\r\n        };\r\n\r\n        //   dispatch(createPost(postObject));\r\n        var updates = {};\r\n        updates[\"/usersCraft/\" + userEmail + \"/posts/\" + idPost] = postObject;\r\n        updates[\r\n          \"/currentDay/\" + currentDay + \"/posts/\" + idPost\r\n        ] = currentDayObject;\r\n        // updates['/posts/' + user +  newPostKey] = postData;\r\n        // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\r\n        basicfirebasecrudservices.updateFirebaseNode(updates);\r\n        //   return firebase.database().ref().update(updates);\r\n      }\r\n    }\r\n  }\r\n\r\n  return <Card bg={\"light\"} style={{ width: \"95%\", margin: \"1rem\" }}>\r\n    <Card.Header>{header}</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>{!!setId ? setId : \"\"} {title}</Card.Title>\r\n      <div dangerouslySetInnerHTML={{ __html: quizString }} />\r\n\r\n    \r\n      {/* \r\n        {!!media && <ShowQuizMedia media={media} randomNumber={randomNumber} />}\r\n        \r\n      */}\r\n\r\n      <SpreadsheetLayout quizString={quizString} theme={theme} />\r\n      \r\n    </Card.Body>\r\n\r\n    {showAnswer ? (\r\n      <InputGroup size=\"sm\" style={{ width: \"95%\", margin: \"1rem\" }}>\r\n\r\n\r\n        <InputGroup.Text id=\"basic-addon1\">\r\n          <span\r\n            className={answerIsRight ? \"text-success\" : \"text-danger\"}\r\n          >\r\n            \u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442: {answer}\r\n          </span>\r\n        </InputGroup.Text>\r\n\r\n        <FormControl\r\n          value={value}\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          aria-label=\"Answer\"\r\n          aria-describedby=\"inputGroup-answer\"\r\n          readOnly\r\n        />\r\n      </InputGroup>\r\n    ) : (<>\r\n      <InputGroup size=\"sm\" style={{ width: \"95%\", margin: \"1rem\" }}>\r\n\r\n        <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleCheckAnswer}>\r\n          \u041E\u0442\u0432\u0435\u0442\r\n        </Button>\r\n\r\n        <FormControl\r\n          value={value}\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          aria-label=\"Answer\"\r\n          aria-describedby=\"inputGroup-answer\"\r\n        />\r\n      </InputGroup>\r\n\r\n      {!!hint ? (\r\n        <div className=\"text-secondary ml-3 mb-2 text-break\"\r\n          dangerouslySetInnerHTML={{ __html: hint }}>\r\n        </div>\r\n      ) : // <ReactMarkdown source={props.hint} escapeHtml={false} /></div>\r\n        null}\r\n    </>\r\n\r\n    )}\r\n\r\n    {!!hint && showAnswer ? <div className=\"text-secondary ml-3 mb-2\"\r\n      dangerouslySetInnerHTML={{ __html: hint }} /> :\r\n      null}\r\n  </Card>\r\n}\r\n\r\nexport default QuizWithRandomNumber\r\n", "let { useSelector } = ReactRedux;\r\nlet { useState } = React;\r\nlet { Card, Pagination, Navbar, Form, InputGroup, Button, ButtonGroup } = ReactBootstrap;\r\n\r\nimport {\r\n  selectApplication\r\n} from '../features/application/cdnApplicationSlice';\r\n\r\nimport shuffle from '../../utlities/shuffle';\r\n\r\nimport QuizWithRandomNumber from './cdnQuizWithRandomNumber';\r\n\r\nfunction CdnQuizCardWithStorageLayout() {\r\n  return <QuizCardWithStorage set={set} />\r\n}\r\n\r\nexport default CdnQuizCardWithStorageLayout\r\n\r\n\r\nfunction OneRandomManyAnswers(props) {\r\n  return (\r\n    <Card style={{ width: '800px' }}>\r\n      <Card.Img variant=\"top\"\r\n        src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n      <Card.Body>\r\n        <Card.Title>OneRandomManyAnswers</Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n  // return <div>\r\n  //   <h1>{props?.setTitle}</h1>\r\n  //   <div className=\"mb-4\">{!!qSets[props?.set]?.text ? parse(qSets[props.set].text): \"\"}</div>\r\n  //   <hr />\r\n  // </div>\r\n}\r\n\r\nfunction QuizSet({ set = [], setTitle = \"\u0422\u0435\u0441\u0442\u044B\" }) {\r\n  const [selectedQuiz, setSelectedQuiz] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  const pagesCount = Math.ceil(set.length / itemsPerPage);\r\n  //  const isPaginationShown = alwaysShown ? true : pagesCount > 1;\r\n  const isCurrentPageFirst = currentPage === 0;\r\n  const isCurrentPageLast = currentPage === pagesCount - 1;\r\n\r\n  const changePage = number => {\r\n    if (currentPage === number) return;\r\n    setCurrentPage(number);\r\n    // scrollToTop();\r\n  };\r\n\r\n  const onPreviousPageClick = () => {\r\n    if (currentPage < 1) {\r\n      return (changePage(currentPage => currentPage = 0));\r\n    } else {\r\n      changePage(currentPage => currentPage - 1);\r\n    }\r\n\r\n  };\r\n\r\n  const onNextPageClick = () => {\r\n    changePage(currentPage => currentPage + 1);\r\n  };\r\n\r\n\r\n  function doSelectQuiz(index) {\r\n    setLoading(true);\r\n    setSelectedQuiz(index);\r\n    setLoading(false);\r\n  }\r\n\r\n  let quizprops = set[selectedQuiz];\r\n\r\n  if (set.length > 10) {\r\n\r\n\r\n    let items = [];\r\n    for (let index = currentPage * itemsPerPage; index < currentPage * itemsPerPage + itemsPerPage; index++) {\r\n      items.push(\r\n        <Pagination.Item key={index} active={index === selectedQuiz}\r\n          onClick={() => doSelectQuiz(index)}\r\n        >\r\n          {index + 1}\r\n        </Pagination.Item>,\r\n      );\r\n    }\r\n\r\n    return <div className='m-1'>\r\n      <Navbar bg=\"light\">\r\n        <Navbar.Brand>{setTitle}</Navbar.Brand>\r\n\r\n\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Pagination size=\"sm\">\r\n            <Pagination.Prev\r\n              className={isCurrentPageFirst ? \"disable\" : \"\"}\r\n              onClick={onPreviousPageClick}\r\n              disabled={isCurrentPageFirst}\r\n            />\r\n            {items}\r\n            <Pagination.Next\r\n              onClick={onNextPageClick}\r\n              disabled={isCurrentPageLast}\r\n              className={isCurrentPageLast ? \"disable\" : \"\"}\r\n            />\r\n          </Pagination>\r\n        </Navbar.Collapse>\r\n\r\n      </Navbar>\r\n      <hr />\r\n      {loading ? <div>...</div> : <QuizCardWithStorage key={selectedQuiz} setId={selectedQuiz + 1} {...quizprops} />}\r\n    </div>\r\n  }\r\n\r\n\r\n  return <div className=\"mt-1\">\r\n    <Navbar bg=\"light\">\r\n      <Navbar.Brand >{setTitle}</Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <ButtonGroup size={set.length < 5 ? \"lg\" : \"sm\"}>\r\n          {set.map((quiz, index) => (\r\n            <Button\r\n              variant={selectedQuiz === index ? \"secondary\" : \"outline-secondary\"}\r\n              onClick={() => doSelectQuiz(index)}\r\n              key={index}\r\n            >\r\n              {set.length < 10 ? <span className=\"m-2\" >{index + 1}</span> : <small>{index + 1}</small>}\r\n            </Button>\r\n          ))}\r\n        </ButtonGroup>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    <hr />\r\n      {loading ? <div>...</div> : <QuizCardWithStorage key={selectedQuiz} setId={selectedQuiz + 1} {...quizprops} />}\r\n    \r\n  </div>\r\n}\r\n\r\n\r\nfunction CaseAccountingWithTasks(props) {\r\n  return (\r\n    <Card style={{ width: '800px' }}>\r\n      <Card.Img variant=\"top\"\r\n        src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n      <Card.Body>\r\n        <Card.Title>CaseAccountingWithTasks</Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction CaseWithRandomNumber(props) {\r\n  return (\r\n    <Card style={{ width: '800px' }}>\r\n      <Card.Img variant=\"top\"\r\n        src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n      <Card.Body>\r\n        <Card.Title>CaseWithRandomNumber</Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// function QuizWithRandomNumber() {\r\n//   return (\r\n//     <Card style={{ width: '800px' }}>\r\n//       <Card.Img variant=\"top\"\r\n//         src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n//       <Card.Body>\r\n//         <Card.Title>QuizWithRandomNumber</Card.Title>\r\n//       </Card.Body>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\nfunction MultipleChoicesQuiz({email, user, avatarUrl, header=\"h\",\r\ntitle, imageurl = null, setId = null, text = null, choices = [],\r\nanswers = [\"right\"], hint = \"\", theme=\"\"}) {\r\n  const [showAnswer, setShowAnswer] = useState(null);\r\n  const [answerIsRight, setAnswerIsRight] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function handleCheckboxChange(event) {\r\n    // console.log(event.target.id);\r\n    // const target = event.target;\r\n    // const checked = target.checked;\r\n    // const name = target.name;\r\n    setValue(event.target.id);\r\n  }\r\n\r\n  function handleCheckAnswer() {\r\n    setShowAnswer(true);\r\n    if (value === answers[0]) {\r\n      setAnswerIsRight(true);\r\n\r\n      if (email.length > 6) {\r\n        let userEmail = email.replace(/[^a-zA-Z0-9]/g, \"_\");\r\n        let idPost = basicfirebasecrudservices.getFirebaseNodeKey(\"usersCraft/\" + userEmail + \"/posts\");\r\n        let currentDay = new Intl.DateTimeFormat(\"en\", {\r\n          weekday: \"short\",\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"numeric\",\r\n        })\r\n          .format(new Date())\r\n          .replace(/[^a-zA-Z0-9]/g, \"_\");\r\n\r\n        let postObject = {\r\n          id: idPost, //Math.floor(Math.random() * 1001),\r\n          title: title,\r\n          theme: theme,\r\n          answer: answers[0],\r\n          comment: title + \" (\" + theme + \")\", //\u0422\u0435\u043C\u0430\r\n          type: \"multiplechoices\",\r\n          content: text,\r\n          quizString: text,\r\n          deleted: false,\r\n          email: email,\r\n          user: user,\r\n          avatarUrl: !!avatarUrl ? avatarUrl : \"\",\r\n          date: new Intl.DateTimeFormat(\"ru\", {\r\n            weekday: \"short\",\r\n            year: \"numeric\",\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n          }).format(new Date()), //Date().toJSON()\r\n        };\r\n\r\n        let currentDayObject = {\r\n          id: idPost,\r\n          title: title,\r\n          theme: theme,\r\n          email: email,\r\n          user: user,\r\n          avatarUrl: !!avatarUrl ? avatarUrl : null,\r\n          timestamp: +Date.now(),\r\n        };\r\n\r\n        //   dispatch(createPost(postObject));\r\n        var updates = {};\r\n        updates[\"/usersCraft/\" + userEmail + \"/posts/\" + idPost] = postObject;\r\n        updates[\r\n          \"/currentDay/\" + currentDay + \"/posts/\" + idPost\r\n        ] = currentDayObject;\r\n        // updates['/posts/' + user +  newPostKey] = postData;\r\n        // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\r\n        basicfirebasecrudservices.updateFirebaseNode(updates);\r\n        // return firebase.database().ref().update(updates);\r\n      }\r\n    }\r\n  }\r\n\r\n  return  <Card bg={\"light\"} style={{ width: \"95%\", margin: \"1rem\" }}>\r\n        <Card.Header>{header}</Card.Header> \r\n       <Card.Body>\r\n         \r\n         <Card.Title>{!!setId ? setId : \"\"} {title}</Card.Title>\r\n           {!!imageurl ? (\r\n             <Card.Img variant=\"top\" src={imageurl} />\r\n           ) : null}\r\n\r\n           {/* {!!props?.laboratoryChart ? <GetChartForQuiz laboratoryChart={props.laboratoryChart} /> : null} */}\r\n           <div dangerouslySetInnerHTML={{ __html: text }} />\r\n       \r\n           \r\n             <Form.Group controlId={\"formBasicCheckbox\"} >\r\n               {choices.map((item, index) =>\r\n                 <Form.Check\r\n                   key={index}\r\n                   type='radio' // \"checkbox\"\r\n                   label={item}\r\n                   onChange={handleCheckboxChange}\r\n                   name={\"item\"}\r\n                   id={item}\r\n                   className=\"mb-2\"\r\n                 />\r\n               )}\r\n             </Form.Group>\r\n\r\n\r\n         </Card.Body>\r\n         <InputGroup size=\"sm\" style={{ width: \"95%\", margin: \"1rem\" }}>\r\n\r\n\r\n\r\n           {showAnswer ? (<>\r\n             <InputGroup.Text id=\"basic-addon1\">\r\n               <span\r\n                 className={answerIsRight ? \"text-success text-break\" : \"text-danger text-break\"}\r\n               >\r\n                 \u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442: {answers[0]}\r\n               </span>\r\n             </InputGroup.Text>\r\n             {!!hint ? <div className=\"text-secondary ml-3 mb-2 text-break\" dangerouslySetInnerHTML={{ __html: hint }} />\r\n :               null}</>\r\n           ) : <Button variant=\"outline-secondary\" onClick={handleCheckAnswer}>\r\n               \u041E\u0442\u0432\u0435\u0442\r\n             </Button>\r\n           }\r\n         </InputGroup>\r\n\r\n\r\n    </Card>\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SingleQuizCardWithStorage(props) {\r\n   let randomNumber = Math.random() * 10;\r\n\r\n  // if (props.type === \"accountingwithprofitscash\") {\r\n  //   return <CaseAccountingWithTasks {...props} randomNumber={randomNumber}\r\n  //   />;\r\n  // }\r\n  // if (props.type === \"casewithrandomnumber\") {\r\n  //   return <CaseWithRandomNumber {...props} randomNumber={randomNumber} />;\r\n  // }\r\n\r\n  if (props.text.includes(\"{=\")) {\r\n    return <QuizWithRandomNumber {...props} randomNumber={randomNumber} />;\r\n  }\r\n\r\n  if (!!props?.choices) {\r\n    let { choices, ...other } = props;\r\n    return <MultipleChoicesQuiz\r\n      choices={shuffle(choices)} {...other}\r\n    />;\r\n  }\r\n\r\n\r\n\r\n  return <Card style={{ width: '800px' }}>\r\n    <Card.Img variant=\"top\"\r\n      src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n    <Card.Body>\r\n      <Card.Title>SingleQuizCardWithStorage</Card.Title>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n\r\n  // (\r\n  //   <>\r\n  //     <Card bg={\"light\"} style={{ width: \"95%\", margin: \"1rem\" }} key={props.key}>\r\n  //       <Card.Header onClick={handleShow}>{props.header}</Card.Header>\r\n  //       <Card.Body>\r\n  //         {!!props.imageurl ? (\r\n  //           <Card.Img variant=\"top\" src={props.imageurl} />\r\n  //         ) : null}\r\n  //         <Card.Title>{props.title}</Card.Title>\r\n  //         <div\r\n  //           dangerouslySetInnerHTML={{ __html: props.text }}\r\n  //         />\r\n  //         <div>{props.children}</div>\r\n\r\n  //       </Card.Body>\r\n  //     </Card>\r\n\r\n  //   </>\r\n  // );\r\n}\r\n\r\nfunction QuizCardWithStorage(props) {\r\n  let { user, avatarUrl, userEmail } = useSelector(selectApplication)\r\n\r\n  if (!!props?.set) {\r\n    return <QuizSet {...props} email={user} user={user} avatarUrl={avatarUrl} userEmail={userEmail} />\r\n  }\r\n  return <SingleQuizCardWithStorage  {...props} email={user} user={user} avatarUrl={avatarUrl} userEmail={userEmail} />\r\n\r\n\r\n\r\n  // return <Card style={{ width: '800px' }}>\r\n  //     <Card.Img variant=\"top\"\r\n  //       src=\"https://images.unsplash.com/photo-1456574808786-d2ba7a6aa654?q=80&w=800&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" />\r\n  //     <Card.Body>\r\n  //       <Card.Title>QuizCardWithStorage</Card.Title>\r\n  //     </Card.Body>\r\n  //   </Card>\r\n\r\n  // if (props?.type === \"OneRandomManyAnswers\") { return <OneRandomManyAnswers {...props} /> }\r\n  // return <div>\r\n  //   {!!props?.set ? <QuizSet {...props} email={user} user={user} avatarUrl={avatarUrl} userEmail={userEmail} /> :\r\n  //     <SingleQuizCardWithStorage  {...props} email={user} user={user} avatarUrl={avatarUrl} userEmail={userEmail} />}\r\n  // </div>\r\n}\r\n\r\n\r\n\r\n\r\nlet set = [\r\n    {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041A\u043E\u044D\u0444\u0444\u0438\u0446\u0438\u0435\u043D\u0442 \u0430\u0431\u0441\u043E\u043B\u044E\u0442\u043D\u043E\u0439 \u043B\u0438\u043A\u0432\u0438\u0434\u043D\u043E\u0441\u0442\u0438\", theme: \"\u0410\u043D\u0430\u043B\u0438\u0437 \u0444\u0438\u043D\u0441\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u0438 \u0445\u043E\u0437\u0434\u0435\u044F\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u0438\",\r\n    text: `<table>\r\n      <tbody>\r\n      <tr>\r\n      <th>\u0410\u041A\u0422\u0418\u0412\u042B</th>\r\n      <th>\u041F\u0410\u0421\u0421\u0418\u0412\u042B</th>\r\n      </tr>\r\n      </tbody>\r\n      <tbody>\r\n      <tr>\r\n      <td>\u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 {=3000+2*{var1-10}*100}</td>\r\n      <td>\u0423\u0441\u0442\u0430\u0432\u043D\u044B\u0439 \u043A\u0430\u043F\u0438\u0442\u0430\u043B {=2000-{var1-10}*100}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>\u041C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B {=2000-2*{var1-10}*100}</td>\r\n      <td>\u041D\u0435\u0440\u0430\u0441\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u043D\u0430\u044F \u043F\u0440\u0438\u0431\u044B\u043B\u044C {=2000+{var1-10}*100}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>\u041D\u0435\u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043D\u043E\u0435 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u043E 1000</td>\r\n      <td></td>\r\n      </tr>\r\n      <tr>\r\n      <td>\u0413\u043E\u0442\u043E\u0432\u0430\u044F \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u044F 500 </td>\r\n      <td>\u0414\u043E\u043B\u0433\u043E\u0441\u0440\u043E\u0447\u043D\u044B\u0435 \u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 {=2000-2*{var1-10}*100}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>\u0414\u0435\u0431\u0438\u0442\u043E\u0440\u0441\u043A\u0430\u044F \u0437\u0430\u0434\u043E\u043B\u0436\u0435\u043D\u043D\u043E\u0441\u0442\u044C 1000</td>\r\n      <td>\u041A\u0440\u0430\u0442\u043A\u043E\u0441\u0440\u043E\u0447\u043D\u044B\u0439 \u043A\u0440\u0435\u0434\u0438\u0442 1000</td>\r\n      </tr>\r\n      <tr>\r\n      <td>\u0414\u0435\u043D\u044C\u0433\u0438 500</td>\r\n      <td>\u041A\u0440\u0435\u0434\u0438\u0442\u043E\u0440\u0441\u043A\u0430\u044F \u0437\u0430\u0434\u043E\u043B\u0436\u0435\u043D\u043D\u043E\u0441\u0442\u044C {=1000+2*{var1-10}*100}</td>\r\n      </tr>\r\n      </tbody>\r\n      </table>`,\r\n    answer: \"500/(2000+2*{var1-10}*100)\"\r\n  },\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u043E\u043A\u0443\u043F\u043A\u0430 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u043E\u0432 \u0443 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u043E\u0432\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u043E\u043A\u0443\u043F\u043A\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u043E\u0432 \u0443 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u043E\u0432?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u043E\u0432 \u0432 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u043E\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u043E\u0432 \u0432 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u043E?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u0410-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043D\u0430 \u0441\u043A\u043B\u0430\u0434 \u0433\u043E\u0442\u043E\u0432\u043E\u0439 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u0435\u0440\u0435\u0434\u0430\u0447\u0435 \u043D\u0430 \u0441\u043A\u043B\u0430\u0434 \u0433\u043E\u0442\u043E\u0432\u043E\u0439 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u0410-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0421\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0441\u043E \u0441\u043A\u043B\u0430\u0434\u0430 \u0433\u043E\u0442\u043E\u0432\u043E\u0439 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438 \u043F\u0440\u0438 \u043F\u0440\u043E\u0434\u0430\u0436\u0435\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u0438 \u0441\u043E \u0441\u043A\u043B\u0430\u0434\u0430 \u0433\u043E\u0442\u043E\u0432\u043E\u0439 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438 \u043F\u0440\u0438 \u043F\u0440\u043E\u0434\u0430\u0436\u0435?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u0434\u043E\u043B\u0436\u0435\u043D\u043D\u043E\u0441\u0442\u0438 \u043F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044F \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u043F\u0440\u043E\u0434\u0430\u0436\u0438 (\u043F\u0440\u0438\u0437\u043D\u0430\u043D\u0438\u0438 \u0432\u044B\u0440\u0443\u0447\u043A\u0438)\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u0437\u0430\u0434\u043E\u043B\u0436\u0435\u043D\u043D\u043E\u0441\u0442\u0438 \u043F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044F \u043D\u0430 \u043C\u043E\u043C\u0435\u043D\u0442 \u043F\u0440\u043E\u0434\u0430\u0436\u0438 (\u043F\u0440\u0438\u0437\u043D\u0430\u043D\u0438\u0438 \u0432\u044B\u0440\u0443\u0447\u043A\u0438)?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u0435 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043D\u0430 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442 \u043E\u0442 \u043F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044F \u0432 \u0441\u0447\u0435\u0442 \u0440\u0430\u043D\u0435\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043D\u043E\u0439 \u043F\u0440\u043E\u0434\u0430\u0436\u0438\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u043E\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u0438 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043D\u0430 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442 \u043E\u0442 \u043F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u044F \u0432 \u0441\u0447\u0435\u0442 \u0440\u0430\u043D\u0435\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043D\u043E\u0439 \u043F\u0440\u043E\u0434\u0430\u0436\u0438?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u0410-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u0435\u0440\u0435\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u0430\u043C \u0432 \u0441\u0447\u0435\u0442 \u0440\u0430\u043D\u0435\u0435 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0445 \u0446\u0435\u043D\u043D\u043E\u0441\u0442\u0435\u0439\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u0435\u0440\u0435\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u0430\u043C?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u043D\u043E\u0439 \u043F\u043B\u0430\u0442\u044B \u043E\u0441\u043D\u043E\u0432\u043D\u044B\u043C \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u043C \u0440\u0430\u0431\u043E\u0447\u0438\u043C\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u043D\u043E\u0439 \u043F\u043B\u0430\u0442\u044B \u043E\u0441\u043D\u043E\u0432\u043D\u044B\u043C \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u043C \u0440\u0430\u0431\u043E\u0447\u0438\u043C?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u0432\u0437\u043D\u043E\u0441\u043E\u0432 \u043F\u043E \u0441\u043E\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0441\u0442\u0440\u0430\u0445\u043E\u0432\u0430\u043D\u0438\u044E\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u0432\u0437\u043D\u043E\u0441\u043E\u0432 \u043F\u043E \u0441\u043E\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0441\u0442\u0440\u0430\u0445\u043E\u0432\u0430\u043D\u0438\u044E?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0423\u043F\u043B\u0430\u0442\u0430 \u043D\u0430\u043B\u043E\u0433\u0430 \u0432 \u0431\u044E\u0434\u0436\u0435\u0442 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0443\u043F\u043B\u0430\u0442\u0435 \u043D\u0430\u043B\u043E\u0433\u0430 \u0432 \u0431\u044E\u0434\u0436\u0435\u0442 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  },\r\n\r\n  {\r\n    header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0423\u043F\u043B\u0430\u0442\u0430 \u0441\u043E\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0445 \u0432\u0437\u043D\u043E\u0441\u043E\u0432 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0443\u043F\u043B\u0430\u0442\u0435 \u0441\u043E\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0445 \u0432\u0437\u043D\u043E\u0441\u043E\u0432 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430?\",\r\n    choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n    answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 (\u0443\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435) \u043D\u0430\u043B\u043E\u0433\u0430 \u043D\u0430 \u0434\u043E\u0445\u043E\u0434\u044B \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u043B\u0438\u0446\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 (\u0443\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0438) \u043D\u0430\u043B\u043E\u0433\u0430 \u043D\u0430 \u0434\u043E\u0445\u043E\u0434\u044B \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u043B\u0438\u0446?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u041F+\u0425, \u041F-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u043A\u0430\u0441\u0441\u0443 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u043A\u0430\u0441\u0441\u0443 \u0441 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410+\u0425, \u0410-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0412\u044B\u043F\u043B\u0430\u0442\u0430 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u043D\u043E\u0439 \u043F\u043B\u0430\u0442\u044B \u0438\u0437 \u043A\u0430\u0441\u0441\u044B\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0432\u044B\u043F\u043B\u0430\u0442\u0435 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u043D\u043E\u0439 \u043F\u043B\u0430\u0442\u044B \u0438\u0437 \u043A\u0430\u0441\u0441\u044B?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0424\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0443\u0441\u0442\u0430\u0432\u043D\u043E\u0433\u043E \u043A\u0430\u043F\u0438\u0442\u0430\u043B\u0430\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0438 \u0443\u0441\u0442\u0430\u0432\u043D\u043E\u0433\u043E \u043A\u0430\u043F\u0438\u0442\u0430\u043B\u0430?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0412\u0437\u043D\u043E\u0441 \u0443\u0447\u0440\u0435\u0434\u0438\u0442\u0435\u043B\u0435\u043C \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u043A\u0430\u0441\u0441\u0443\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0432\u0437\u043D\u043E\u0441\u0435 \u0443\u0447\u0440\u0435\u0434\u0438\u0442\u0435\u043B\u0435\u043C \u0434\u0435\u043D\u0435\u0436\u043D\u044B\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u043A\u0430\u0441\u0441\u0443?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410+\u0425, \u0410-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0440\u0430\u0442\u043A\u043E\u0441\u0440\u043E\u0447\u043D\u043E\u0433\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0430 \u043D\u0430 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u043A\u0440\u0430\u0442\u043A\u043E\u0441\u0440\u043E\u0447\u043D\u043E\u0433\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0430 \u043D\u0430 \u0440\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410+\u0425, \u041F+X\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043E\u0432 \u043F\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0443\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043E\u0432 \u043F\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0443?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u041F+\u0425, \u041F-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u0423\u043F\u043B\u0430\u0442\u0430 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043E\u0432 \u043F\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0443 \u0438 \u043F\u043E\u0433\u0430\u0448\u0435\u043D\u0438\u0435 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u0439 \u0441\u0443\u043C\u043C\u044B \u0434\u043E\u043B\u0433\u0430\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u0443\u043F\u043B\u0430\u0442\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043E\u0432 \u043F\u043E \u043A\u0440\u0435\u0434\u0438\u0442\u0443 \u0438 \u043F\u043E\u0433\u0430\u0448\u0435\u043D\u0438\u0438 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u0439 \u0441\u0443\u043C\u043C\u044B \u0434\u043E\u043B\u0433\u0430?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u0410-\u0425, \u041F-\u0425\"]\r\n  // },\r\n\r\n  // {\r\n  //   header: \"\u0422\u0438\u043F\u043E\u0432\u0430\u044F \u0437\u0430\u0434\u0430\u0447\u0430\", title: \"\u041D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0435 \u0434\u0438\u0432\u0438\u0434\u0435\u043D\u0434\u043E\u0432 \u0430\u043A\u0446\u0438\u043E\u043D\u0435\u0440\u0430\u043C\", theme: \"\u041F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u0431\u044E\u0434\u0436\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n  //   text: \"\u041A\u0430\u043A \u0438\u0437\u043C\u0435\u043D\u044F\u0435\u0442\u0441\u044F \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u0440\u0438 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0438 \u0434\u0438\u0432\u0438\u0434\u0435\u043D\u0434\u043E\u0432 \u0430\u043A\u0446\u0438\u043E\u043D\u0435\u0440\u0430\u043C?\",\r\n  //   choices: [\"\u0410+\u0425, \u0410-\u0425\", \"\u0410+\u0425, \u041F+X\", \"\u0410-\u0425, \u041F-\u0425\", \"\u041F+\u0425, \u041F-\u0425\"],\r\n  //   answers: [\"\u041F+\u0425, \u041F-\u0425\"]\r\n  // },\r\n]", "import counterReducer from '../features/counter/cdnCounterSlice';\r\nimport spreadsheetReducer from '../features/spreadsheet/cdnSpreadsheetSlice';\r\nimport applicationReducer from '../features/application/cdnApplicationSlice';\r\nimport postsReducer from '../features/posts/cdnPostsSlice';\r\nlet { configureStore } = RTK;\r\n\r\nlet store = configureStore({\r\n    reducer: {\r\n        counter: counterReducer,\r\n        spreadsheet: spreadsheetReducer,\r\n        application: applicationReducer,\r\n        posts: postsReducer\r\n    },\r\n})\r\n\r\nconsole.log(store)\r\n\r\nexport default store;\r\n", "import { createRoot } from \"react-dom/client\";\r\nlet { Provider } = ReactRedux;\r\n\r\nimport { Counter } from '../original/features/counter/Counter';\r\nimport CdnQuizCardWithStorage from \"../original/components/cdnQuizCardWithStorage\";\r\n\r\nimport store from '../original/state/cdnStore';\r\n\r\ncreateRoot(document.querySelector(\"#currentbundle\")).render(\r\n    <Provider store={store}>\r\n        <Counter />\r\n        <CdnQuizCardWithStorage />\r\n    </Provider>\r\n);"],
  "mappings": "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",
  "names": ["client_default", "createRoot", "hydrateRoot", "createSlice", "counterSlice", "__name", "state", "action", "increment", "decrement", "incrementByAmount", "incrementAsync", "amount", "dispatch", "selectCount", "cdnCounterSlice_default", "useSelector", "useDispatch", "useState", "Card", "Counter", "count", "selectCount", "dispatch", "incrementAmount", "setIncrementAmount", "increment", "decrement", "e", "incrementByAmount", "incrementAsync", "__name", "createSlice", "loadState", "__name", "serializedState", "err", "_a", "_b", "applicationSlice", "__spreadProps", "__spreadValues", "state", "action", "setUserProfile", "set_user_profile", "set_currentProject", "selectApplication", "cdnApplicationSlice_default", "shuffle", "array", "__name", "shuffle_default", "produce", "createNewDraft", "data", "calcDataWithImmer", "__name", "cdnCreateNewDraft_default", "draft", "oneMoreLoop", "row", "ix", "cellValue", "mapObj", "re", "matched", "result", "calculateFormula", "formula", "parser", "dependencies", "cellCoord", "done", "x", "y", "startCellCoord", "endCellCoord", "fragment", "rowData", "colFragment", "col", "value", "resultObj", "later", "dependendentOn", "item", "e", "alphabet", "alphabet_default", "createSlice", "createProtoArray", "protoDataObject", "maxRow", "maxColumn", "objKey", "col", "row", "currentColIndex", "alphabet_default", "item", "array", "i", "colArrayIndex", "rowArrayIndex", "__name", "createProtoObject", "protoArray", "protoObject", "j", "insert", "arr", "index", "newItem", "spreadsheetSlice", "cdnCreateNewDraft_default", "state", "add_row_under_newProtoData", "newRow", "add_row_before_newProtoData", "newProtoBeforeRow", "delete_row__newProtoData", "add_column_after__newProtoData", "add_column_before__newProtoData", "delete_column__newProtoData", "element", "action", "newProtoData", "loadData", "add_row_under", "add_row_before", "delete_row", "add_column_after", "add_column_before", "delete_column", "update_formula", "update_data", "load_data", "new_empty_spreadsheet", "set_spreadsheetTitle", "toggleExpandView", "selectSpreadsheetProtoData", "selectSpreadsheetData", "selectSpreadsheetFormulaValue", "selectSpreadsheetFormulaRowIndex", "selectSpreadsheetFormulaColumnIndex", "selectSpreadsheetTitle", "selectSpreadsheetExpand", "cdnSpreadsheetSlice_default", "useSelector", "useDispatch", "useState", "Button", "FormulaBlock", "formulaValue", "selectSpreadsheetFormulaValue", "formulaRowIndex", "selectSpreadsheetFormulaRowIndex", "formulaColumnIndex", "selectSpreadsheetFormulaColumnIndex", "formula", "setFormula", "dispatch", "onKeyPressOnInput", "e", "handleSubmit", "__name", "valueChecked", "update_data", "cdnFormulaBlock_default", "useSelector", "useDispatch", "useState", "Modal", "Container", "Row", "Form", "InputGroup", "Button", "Col", "Image", "FormControl", "SearchPhotos", "props", "query", "setQuery", "pics", "setPics", "unsplash", "searchPhotos", "__name", "__async", "res", "e", "pic", "UserFrofile", "LoginLogout", "screenSize", "_a", "_b", "user_profile", "selectApplication", "unsplashPic", "setUnsplashPic", "dispatch", "show", "setShow", "user", "email", "handleClose", "handleShow", "handleSubmit", "setUserProfile", "cdnLoginLogout_default", "useSelector", "GreenHeader", "title", "selectSpreadsheetTitle", "userProfile", "selectApplication", "cdnLoginLogout_default", "__name", "cdnGreenHeader_default", "useDispatch", "useSelector", "useState", "useEffect", "Cell", "props", "data", "selectSpreadsheetData", "proDataValue", "selectSpreadsheetProtoData", "dispatch", "value", "setValue", "onKeyPressOnInput", "e", "valueChecked", "update_data", "update_formula", "__name", "clicked", "cdnCel_default", "Fragment", "AlphabetRow", "x", "alphabetRow", "i", "alphabet_default", "__name", "cdnAlphabetRow_default", "useSelector", "ActiveCells", "expandView", "selectSpreadsheetExpand", "data", "selectSpreadsheetData", "formulaRowIndex", "selectSpreadsheetFormulaRowIndex", "formulaColumnIndex", "selectSpreadsheetFormulaColumnIndex", "numberOfX", "numberOfY", "cdnAlphabetRow_default", "row", "rowIndex", "_", "columnIndex", "cdnCel_default", "__name", "cdnActiveCells_default", "Table", "ShowXlTableArrayOfArrays", "xlArray", "column", "columnIndex", "alphabet_default", "row", "rowIndex", "__name", "createSlice", "loadState", "__name", "serializedState", "err", "_a", "_b", "postsSlice", "state", "action", "arrayId", "item", "payload", "createPost", "change_post_content", "mark_del_post", "getPosts", "getPostsSuccess", "getPostsFailure", "savePostsSuccess", "setPostsArrayItems", "cdnPostsSlice_default", "postsSlice", "useDispatch", "useSelector", "useState", "useEffect", "Card", "Modal", "Alert", "FormControl", "InputGroup", "Button", "ButtonGroup", "Container", "Row", "Col", "Form", "PostsButtonGroup", "props", "dispatch", "expandView", "selectSpreadsheetExpand", "showSave", "setShowSave", "showOpen", "setShowOpen", "handleClose", "__name", "handleSaveShow", "handleOpenShow", "new_empty_spreadsheet", "toggleExpandView", "SavePostModal", "SelectAndOpenModal", "_a", "content", "selectSpreadsheetProtoData", "email", "selectApplication", "user", "avatarUrl", "savedSuccessfully", "DoSavedSuccessfully", "formDataObject", "setFormDataObject", "editPostTitleComment", "doEditPostTitleComment", "setFormObject", "objectWithNamesValues", "savePost", "userEmail", "idPost", "postObject", "createProtoObject", "createPost", "updates", "PostFormHook", "ShowXlTableArrayOfArrays", "createProtoArray", "e", "selectedTheme", "setSelectedTheme", "userPosts", "setUserPosts", "getPosts", "__async", "res", "closeModalopenSpreadsheet", "title", "load_data", "set_spreadsheetTitle", "data", "item", "quiz", "post", "uniqueThemes", "theme", "calc", "index", "useDispatch", "useSelector", "ButtonGroup", "Button", "IconBar", "quizString", "title", "answer", "theme", "answerIsRight", "dispatch", "expandView", "selectSpreadsheetExpand", "userProfile", "selectApplication", "PostsButtonGroup", "toggleExpandView", "__name", "cdnIconBar_default", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "act", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "startTransition", "unstable_act", "useCallback", "useContext", "useDebugValue", "useDeferredValue", "useEffect", "useId", "useImperativeHandle", "useInsertionEffect", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "useSyncExternalStore", "useTransition", "version", "useMedia", "queries", "values", "defaultValue", "mediaQueryLists", "q", "getValue", "__name", "index", "mql", "value", "setValue", "useState", "useEffect", "handler", "SpreadsheetLayout", "props", "screenSize", "useMedia", "cdnGreenHeader_default", "cdnIconBar_default", "__spreadValues", "cdnFormulaBlock_default", "cdnActiveCells_default", "__name", "extract", "beg", "end", "matcher", "normalise", "__name", "str", "extract_default", "useSelector", "useState", "Card", "InputGroup", "Button", "FormControl", "QuizWithRandomNumber", "email", "user", "avatarUrl", "header", "randomNumber", "quizanswer", "media", "title", "imageurl", "setId", "text", "hint", "theme", "value", "setValue", "showAnswer", "setShowAnswer", "answerIsRight", "setAnswerIsRight", "content", "selectSpreadsheetProtoData", "handleChange", "event", "__name", "parser", "quizString", "searchRegExp", "replaceWith", "answer", "stuffIneed", "extract_default", "i", "feedback", "handleCheckAnswer", "userEmail", "idPost", "currentDay", "postObject", "createProtoObject", "currentDayObject", "updates", "SpreadsheetLayout", "cdnQuizWithRandomNumber_default", "useSelector", "useState", "Card", "Pagination", "Navbar", "Form", "InputGroup", "Button", "ButtonGroup", "CdnQuizCardWithStorageLayout", "QuizCardWithStorage", "set", "__name", "cdnQuizCardWithStorage_default", "QuizSet", "set", "setTitle", "selectedQuiz", "setSelectedQuiz", "useState", "loading", "setLoading", "currentPage", "setCurrentPage", "itemsPerPage", "setItemsPerPage", "pagesCount", "isCurrentPageFirst", "isCurrentPageLast", "changePage", "__name", "number", "onPreviousPageClick", "onNextPageClick", "doSelectQuiz", "index", "quizprops", "items", "Pagination", "Navbar", "QuizCardWithStorage", "__spreadValues", "ButtonGroup", "quiz", "Button", "MultipleChoicesQuiz", "email", "user", "avatarUrl", "header", "title", "imageurl", "setId", "text", "choices", "answers", "hint", "theme", "showAnswer", "setShowAnswer", "useState", "answerIsRight", "setAnswerIsRight", "value", "setValue", "handleCheckboxChange", "event", "__name", "handleCheckAnswer", "userEmail", "idPost", "currentDay", "postObject", "currentDayObject", "updates", "Card", "Form", "item", "index", "InputGroup", "Button", "SingleQuizCardWithStorage", "props", "randomNumber", "cdnQuizWithRandomNumber_default", "__spreadProps", "__spreadValues", "_a", "other", "__objRest", "shuffle_default", "QuizCardWithStorage", "useSelector", "selectApplication", "QuizSet", "set", "configureStore", "store", "cdnCounterSlice_default", "cdnSpreadsheetSlice_default", "cdnApplicationSlice_default", "cdnPostsSlice_default", "cdnStore_default", "Provider", "createRoot", "cdnStore_default", "Counter", "cdnQuizCardWithStorage_default"]
}
